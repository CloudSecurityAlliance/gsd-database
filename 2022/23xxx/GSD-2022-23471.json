{
  "GSD": {
    "alias": "CVE-2022-23471",
    "id": "GSD-2022-23471",
    "references": [
      "https://www.suse.com/security/cve/CVE-2022-23471.html",
      "https://ubuntu.com/security/CVE-2022-23471"
    ]
  },
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "aliases": [
        "CVE-2022-23471"
      ],
      "details": "containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers.",
      "id": "GSD-2022-23471",
      "modified": "2023-12-13T01:19:35.784396Z",
      "schema_version": "1.4.0"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "security-advisories@github.com",
        "ID": "CVE-2022-23471",
        "STATE": "PUBLIC"
      },
      "affects": {
        "vendor": {
          "vendor_data": [
            {
              "product": {
                "product_data": [
                  {
                    "product_name": "containerd",
                    "version": {
                      "version_data": [
                        {
                          "version_affected": "=",
                          "version_value": "< 1.5.16"
                        },
                        {
                          "version_affected": "=",
                          "version_value": ">= 1.6.0, < 1.6.12"
                        }
                      ]
                    }
                  }
                ]
              },
              "vendor_name": "containerd"
            }
          ]
        }
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. "
          }
        ]
      },
      "impact": {
        "cvss": [
          {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "HIGH",
            "baseScore": 5.7,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "NONE",
            "integrityImpact": "NONE",
            "privilegesRequired": "LOW",
            "scope": "UNCHANGED",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H",
            "version": "3.1"
          }
        ]
      },
      "problemtype": {
        "problemtype_data": [
          {
            "description": [
              {
                "cweId": "CWE-400",
                "lang": "eng",
                "value": "CWE-400: Uncontrolled Resource Consumption"
              }
            ]
          }
        ]
      },
      "references": {
        "reference_data": [
          {
            "name": "https://github.com/containerd/containerd/security/advisories/GHSA-2qjp-425j-52j9",
            "refsource": "MISC",
            "url": "https://github.com/containerd/containerd/security/advisories/GHSA-2qjp-425j-52j9"
          },
          {
            "name": "https://github.com/containerd/containerd/commit/a05d175400b1145e5e6a735a6710579d181e7fb0",
            "refsource": "MISC",
            "url": "https://github.com/containerd/containerd/commit/a05d175400b1145e5e6a735a6710579d181e7fb0"
          },
          {
            "name": "https://security.gentoo.org/glsa/202401-31",
            "refsource": "MISC",
            "url": "https://security.gentoo.org/glsa/202401-31"
          }
        ]
      },
      "source": {
        "advisory": "GHSA-2qjp-425j-52j9",
        "discovery": "UNKNOWN"
      }
    },
    "gitlab.com": {
      "advisories": [
        {
          "affected_range": "<v1.5.16 || >=v1.6.0 <v1.6.12",
          "affected_versions": "All versions before 1.5.16, all versions starting from 1.6.0 before 1.6.12",
          "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
          "cwe_ids": [
            "CWE-1035",
            "CWE-401",
            "CWE-937"
          ],
          "date": "2023-07-11",
          "description": "containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16. Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers.",
          "fixed_versions": [
            "v1.5.16",
            "v1.6.12"
          ],
          "identifier": "CVE-2022-23471",
          "identifiers": [
            "CVE-2022-23471",
            "GHSA-2qjp-425j-52j9"
          ],
          "not_impacted": "",
          "package_slug": "go/github.com/containerd/containerd",
          "pubdate": "2022-12-07",
          "solution": "Upgrade to versions 1.5.16, 1.6.12 or above.",
          "title": "Uncontrolled Resource Consumption",
          "urls": [
            "https://github.com/containerd/containerd/security/advisories/GHSA-2qjp-425j-52j9",
            "https://github.com/containerd/containerd/commit/241563be06a3de8b6a849414c4e805b68d3bb295",
            "https://github.com/containerd/containerd/releases/tag/v1.5.16",
            "https://github.com/containerd/containerd/releases/tag/v1.6.12",
            "https://nvd.nist.gov/vuln/detail/CVE-2022-23471",
            "https://github.com/containerd/containerd/commit/a05d175400b1145e5e6a735a6710579d181e7fb0",
            "https://github.com/advisories/GHSA-2qjp-425j-52j9"
          ],
          "uuid": "e9afd23e-154b-4811-be99-5f1a58e155b5",
          "versions": [
            {
              "commit": {
                "sha": "13a9d2087b04c1a99ba3fb3159fbd6b2493ca6dd",
                "tags": [
                  "v1.6.0"
                ],
                "timestamp": "20220216014847"
              },
              "number": "v1.6.0"
            },
            {
              "commit": {
                "sha": "36ae9ea499e67e0aea79989e9478e307a1e45bee",
                "tags": [
                  "v1.6.12"
                ],
                "timestamp": "20221207215027"
              },
              "number": "v1.6.12"
            },
            {
              "commit": {
                "sha": "ec97fef9bb131204020d7b59c559038a0b3ff90b",
                "tags": [
                  "v1.5.16"
                ],
                "timestamp": "20221207215027"
              },
              "number": "v1.5.16"
            }
          ]
        }
      ]
    },
    "nvd.nist.gov": {
      "cve": {
        "configurations": [
          {
            "nodes": [
              {
                "cpeMatch": [
                  {
                    "criteria": "cpe:2.3:a:linuxfoundation:containerd:*:*:*:*:*:*:*:*",
                    "matchCriteriaId": "D02D9735-2A77-44FE-81D2-6EC3064846FE",
                    "versionEndExcluding": "1.5.16",
                    "vulnerable": true
                  },
                  {
                    "criteria": "cpe:2.3:a:linuxfoundation:containerd:*:*:*:*:*:*:*:*",
                    "matchCriteriaId": "F6490824-A9DE-416F-BC94-9CE863D25A48",
                    "versionEndExcluding": "1.6.12",
                    "versionStartIncluding": "1.6.0",
                    "vulnerable": true
                  }
                ],
                "negate": false,
                "operator": "OR"
              }
            ]
          }
        ],
        "descriptions": [
          {
            "lang": "en",
            "value": "containerd is an open source container runtime. A bug was found in containerd's CRI implementation where a user can exhaust memory on the host. In the CRI stream server, a goroutine is launched to handle terminal resize events if a TTY is requested. If the user's process fails to launch due to, for example, a faulty command, the goroutine will be stuck waiting to send without a receiver, resulting in a memory leak. Kubernetes and crictl can both be configured to use containerd's CRI implementation and the stream server is used for handling container IO. This bug has been fixed in containerd 1.6.12 and 1.5.16.  Users should update to these versions to resolve the issue. Users unable to upgrade should ensure that only trusted images and commands are used and that only trusted users have permissions to execute commands in running containers. "
          },
          {
            "lang": "es",
            "value": "Containerd es un runtime de contenedor de c\u00f3digo abierto. Se encontr\u00f3 un error en la implementaci\u00f3n CRI de Containerd donde un usuario puede agotar la memoria en el host. En el servidor de transmisi\u00f3n CRI, se lanza una rutina para manejar eventos de cambio de tama\u00f1o del terminal si se solicita un TTY. Si el proceso del usuario no se inicia debido, por ejemplo, a un comando defectuoso, la rutina se atascar\u00e1 esperando enviarse sin un receptor, lo que provocar\u00e1 una p\u00e9rdida de memoria. Tanto Kubernetes como crictl se pueden configurar para usar la implementaci\u00f3n CRI de Containerd y el servidor de transmisi\u00f3n se usa para manejar la E/S del contenedor. Este error se solucion\u00f3 en Containerd 1.6.12 y 1.5.16. Los usuarios deben actualizar a estas versiones para resolver el problema. Los usuarios que no puedan actualizar deben asegurarse de que solo se utilicen im\u00e1genes y comandos confiables y que solo los usuarios confiables tengan permisos para ejecutar comandos en contenedores en ejecuci\u00f3n."
          }
        ],
        "id": "CVE-2022-23471",
        "lastModified": "2024-01-31T13:15:08.620",
        "metrics": {
          "cvssMetricV31": [
            {
              "cvssData": {
                "attackComplexity": "LOW",
                "attackVector": "NETWORK",
                "availabilityImpact": "HIGH",
                "baseScore": 6.5,
                "baseSeverity": "MEDIUM",
                "confidentialityImpact": "NONE",
                "integrityImpact": "NONE",
                "privilegesRequired": "LOW",
                "scope": "UNCHANGED",
                "userInteraction": "NONE",
                "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
                "version": "3.1"
              },
              "exploitabilityScore": 2.8,
              "impactScore": 3.6,
              "source": "nvd@nist.gov",
              "type": "Primary"
            },
            {
              "cvssData": {
                "attackComplexity": "LOW",
                "attackVector": "NETWORK",
                "availabilityImpact": "HIGH",
                "baseScore": 5.7,
                "baseSeverity": "MEDIUM",
                "confidentialityImpact": "NONE",
                "integrityImpact": "NONE",
                "privilegesRequired": "LOW",
                "scope": "UNCHANGED",
                "userInteraction": "REQUIRED",
                "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:R/S:U/C:N/I:N/A:H",
                "version": "3.1"
              },
              "exploitabilityScore": 2.1,
              "impactScore": 3.6,
              "source": "security-advisories@github.com",
              "type": "Secondary"
            }
          ]
        },
        "published": "2022-12-07T23:15:09.763",
        "references": [
          {
            "source": "security-advisories@github.com",
            "tags": [
              "Patch",
              "Third Party Advisory"
            ],
            "url": "https://github.com/containerd/containerd/commit/a05d175400b1145e5e6a735a6710579d181e7fb0"
          },
          {
            "source": "security-advisories@github.com",
            "tags": [
              "Third Party Advisory"
            ],
            "url": "https://github.com/containerd/containerd/security/advisories/GHSA-2qjp-425j-52j9"
          },
          {
            "source": "security-advisories@github.com",
            "url": "https://security.gentoo.org/glsa/202401-31"
          }
        ],
        "sourceIdentifier": "security-advisories@github.com",
        "vulnStatus": "Modified",
        "weaknesses": [
          {
            "description": [
              {
                "lang": "en",
                "value": "CWE-401"
              }
            ],
            "source": "nvd@nist.gov",
            "type": "Primary"
          },
          {
            "description": [
              {
                "lang": "en",
                "value": "CWE-400"
              }
            ],
            "source": "security-advisories@github.com",
            "type": "Secondary"
          }
        ]
      }
    }
  }
}