{
    "GSD": {
        "alias": "CVE-2022-23519",
        "id": "GSD-2022-23519",
        "references": [
            "https://www.suse.com/security/cve/CVE-2022-23519.html"
        ]
    },
    "gsd": {
        "osvSchema": {
            "affected": [
                {
                    "package": {
                        "ecosystem": "RubyGems",
                        "name": "rails-html-sanitizer",
                        "purl": "pkg:gem/rails-html-sanitizer"
                    }
                }
            ],
            "aliases": [
                "CVE-2022-23519",
                "GHSA-9h9g-93gc-623h"
            ],
            "details": "## Summary\n\nThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.\n\n- Versions affected: ALL\n- Not affected: NONE\n- Fixed versions: 1.4.4\n\n## Impact\n\nA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways:\n\n- allow both \"math\" and \"style\" elements,\n- or allow both \"svg\" and \"style\" elements\n\nCode is only impacted if allowed tags are being overridden. Applications may be doing this in four different ways:\n\n1. using application configuration:\n\n  ```ruby\n  # In config/application.rb\n  config.action_view.sanitized_allowed_tags = [\"math\", \"style\"]\n  # or\n  config.action_view.sanitized_allowed_tags = [\"svg\", \"style\"]\n  ```\n\n  see https://guides.rubyonrails.org/configuring.html#configuring-action-view\n\n2. using a `:tags` option to the Action View helper `sanitize`:\n\n  ```\n  <%= sanitize @comment.body, tags: [\"math\", \"style\"] %>\n  <%# or %>\n  <%= sanitize @comment.body, tags: [\"svg\", \"style\"] %>\n  ```\n\n  see https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize\n\n3. using Rails::Html::SafeListSanitizer class method `allowed_tags=`:\n\n  ```ruby\n  # class-level option\n  Rails::Html::SafeListSanitizer.allowed_tags = [\"math\", \"style\"]\n  # or\n  Rails::Html::SafeListSanitizer.allowed_tags = [\"svg\", \"style\"]\n  ```\n\n4. using a `:tags` options to the Rails::Html::SafeListSanitizer instance method `sanitize`:\n\n  ```ruby\n  # instance-level option\n  Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"math\", \"style\"])\n  # or\n  Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"svg\", \"style\"])\n  ```\n\nAll users overriding the allowed tags by any of the above mechanisms to include ((\"math\" or \"svg\") and \"style\") should either upgrade or use one of the workarounds immediately.\n\n## Workarounds\n\nRemove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.\n",
            "id": "GSD-2022-23519",
            "modified": "2022-12-13T00:00:00.000Z",
            "published": "2022-12-13T00:00:00.000Z",
            "references": [
                {
                    "type": "WEB",
                    "url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h"
                },
                {
                    "type": "WEB",
                    "url": "https://cwe.mitre.org/data/definitions/79.html"
                },
                {
                    "type": "WEB",
                    "url": "https://hackerone.com/reports/1656627"
                }
            ],
            "schema_version": "1.4.0",
            "severity": [
                {
                    "score": 6.1,
                    "type": "CVSS_V3"
                }
            ],
            "summary": "Possible XSS vulnerability with certain configurations of rails-html-sanitizer"
        }
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "security-advisories@github.com",
                "ID": "CVE-2022-23519",
                "STATE": "PUBLIC"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "rails-html-sanitizer",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_affected": "=",
                                                    "version_value": "< 1.4.4"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "rails"
                        }
                    ]
                }
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways: allow both \"math\" and \"style\" elements,  or allow both \"svg\" and \"style\" elements. Code is only impacted if allowed tags are being overridden. . This issue is fixed in version 1.4.4. All users overriding the allowed tags to include \"math\" or \"svg\" and \"style\" should either upgrade or use the following workaround immediately: Remove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.\n"
                    }
                ]
            },
            "impact": {
                "cvss": [
                    {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 7.2,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "LOW",
                        "integrityImpact": "LOW",
                        "privilegesRequired": "NONE",
                        "scope": "CHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:L/I:L/A:N",
                        "version": "3.1"
                    }
                ]
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "cweId": "CWE-79",
                                "lang": "eng",
                                "value": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h",
                        "refsource": "MISC",
                        "url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h"
                    },
                    {
                        "name": "https://hackerone.com/reports/1656627",
                        "refsource": "MISC",
                        "url": "https://hackerone.com/reports/1656627"
                    },
                    {
                        "name": "https://lists.debian.org/debian-lts-announce/2023/09/msg00012.html",
                        "refsource": "MISC",
                        "url": "https://lists.debian.org/debian-lts-announce/2023/09/msg00012.html"
                    }
                ]
            },
            "source": {
                "advisory": "GHSA-9h9g-93gc-623h",
                "discovery": "UNKNOWN"
            }
        },
        "github.com/rubysec/ruby-advisory-db": {
            "cve": "2022-23519",
            "cvss_v3": 6.1,
            "date": "2022-12-13",
            "description": "## Summary\n\nThere is a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer.\n\n- Versions affected: ALL\n- Not affected: NONE\n- Fixed versions: 1.4.4\n\n## Impact\n\nA possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways:\n\n- allow both \"math\" and \"style\" elements,\n- or allow both \"svg\" and \"style\" elements\n\nCode is only impacted if allowed tags are being overridden. Applications may be doing this in four different ways:\n\n1. using application configuration:\n\n  ```ruby\n  # In config/application.rb\n  config.action_view.sanitized_allowed_tags = [\"math\", \"style\"]\n  # or\n  config.action_view.sanitized_allowed_tags = [\"svg\", \"style\"]\n  ```\n\n  see https://guides.rubyonrails.org/configuring.html#configuring-action-view\n\n2. using a `:tags` option to the Action View helper `sanitize`:\n\n  ```\n  <%= sanitize @comment.body, tags: [\"math\", \"style\"] %>\n  <%# or %>\n  <%= sanitize @comment.body, tags: [\"svg\", \"style\"] %>\n  ```\n\n  see https://api.rubyonrails.org/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize\n\n3. using Rails::Html::SafeListSanitizer class method `allowed_tags=`:\n\n  ```ruby\n  # class-level option\n  Rails::Html::SafeListSanitizer.allowed_tags = [\"math\", \"style\"]\n  # or\n  Rails::Html::SafeListSanitizer.allowed_tags = [\"svg\", \"style\"]\n  ```\n\n4. using a `:tags` options to the Rails::Html::SafeListSanitizer instance method `sanitize`:\n\n  ```ruby\n  # instance-level option\n  Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"math\", \"style\"])\n  # or\n  Rails::Html::SafeListSanitizer.new.sanitize(@article.body, tags: [\"svg\", \"style\"])\n  ```\n\nAll users overriding the allowed tags by any of the above mechanisms to include ((\"math\" or \"svg\") and \"style\") should either upgrade or use one of the workarounds immediately.\n\n## Workarounds\n\nRemove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.\n",
            "gem": "rails-html-sanitizer",
            "ghsa": "9h9g-93gc-623h",
            "patched_versions": [
                ">= 1.4.4"
            ],
            "related": {
                "url": [
                    "https://cwe.mitre.org/data/definitions/79.html",
                    "https://hackerone.com/reports/1656627"
                ]
            },
            "title": "Possible XSS vulnerability with certain configurations of rails-html-sanitizer",
            "url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h"
        },
        "gitlab.com": {
            "advisories": [
                {
                    "affected_range": "<1.4.4",
                    "affected_versions": "All versions before 1.4.4",
                    "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-79",
                        "CWE-937"
                    ],
                    "date": "2022-12-16",
                    "description": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways: allow both \"math\" and \"style\" elements, or allow both \"svg\" and \"style\" elements. Code is only impacted if allowed tags are being overridden. . This issue is fixed in version 1.4.4. All users overriding the allowed tags to include \"math\" or \"svg\" and \"style\" should either upgrade or use the following workaround immediately: Remove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags.",
                    "fixed_versions": [
                        "1.4.4"
                    ],
                    "identifier": "CVE-2022-23519",
                    "identifiers": [
                        "CVE-2022-23519",
                        "GHSA-9h9g-93gc-623h",
                        "GMS-2022-8299"
                    ],
                    "not_impacted": "All versions starting from 1.4.4",
                    "package_slug": "gem/rails-html-sanitizer",
                    "pubdate": "2022-12-14",
                    "solution": "Upgrade to version 1.4.4 or above.",
                    "title": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                    "urls": [
                        "https://nvd.nist.gov/vuln/detail/CVE-2022-23519",
                        "https://hackerone.com/reports/1656627",
                        "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h",
                        "https://github.com/advisories/GHSA-9h9g-93gc-623h"
                    ],
                    "uuid": "14e9e407-48cc-4c20-ac86-39f71f55fc99"
                },
                {
                    "affected_range": "<0",
                    "affected_versions": "All versions before 1.4.4",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-79",
                        "CWE-937"
                    ],
                    "date": "2022-12-13",
                    "description": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') in rails-html-sanitizer.",
                    "fixed_versions": [
                        "1.4.4"
                    ],
                    "identifier": "GMS-2022-8299",
                    "identifiers": [
                        "GHSA-9h9g-93gc-623h",
                        "GMS-2022-8299",
                        "CVE-2022-23519"
                    ],
                    "not_impacted": "All versions starting from 1.4.4",
                    "package_slug": "gem/rails-html-sanitizer",
                    "pubdate": "2022-12-13",
                    "solution": "Upgrade to version 1.4.4 or above.",
                    "title": "Duplicate of ./gem/rails-html-sanitizer/CVE-2022-23519.yml",
                    "urls": [
                        "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h",
                        "https://hackerone.com/reports/1656627",
                        "https://github.com/advisories/GHSA-9h9g-93gc-623h"
                    ],
                    "uuid": "3579ccc6-601e-412d-9f40-02327e052d2d"
                }
            ]
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": [
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:rails_html_sanitizer_project:rails_html_sanitizer:*:*:*:*:*:ruby:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "1.4.4",
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    }
                ]
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2022-23519"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "rails-html-sanitizer is responsible for sanitizing HTML fragments in Rails applications. Prior to version 1.4.4, a possible XSS vulnerability with certain configurations of Rails::Html::Sanitizer may allow an attacker to inject content if the application developer has overridden the sanitizer's allowed tags in either of the following ways: allow both \"math\" and \"style\" elements, or allow both \"svg\" and \"style\" elements. Code is only impacted if allowed tags are being overridden. . This issue is fixed in version 1.4.4. All users overriding the allowed tags to include \"math\" or \"svg\" and \"style\" should either upgrade or use the following workaround immediately: Remove \"style\" from the overridden allowed tags, or remove \"math\" and \"svg\" from the overridden allowed tags."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-79"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://hackerone.com/reports/1656627",
                            "refsource": "MISC",
                            "tags": [
                                "Exploit",
                                "Third Party Advisory"
                            ],
                            "url": "https://hackerone.com/reports/1656627"
                        },
                        {
                            "name": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h",
                            "refsource": "MISC",
                            "tags": [
                                "Exploit",
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/rails/rails-html-sanitizer/security/advisories/GHSA-9h9g-93gc-623h"
                        }
                    ]
                }
            },
            "impact": {
                "baseMetricV3": {
                    "cvssV3": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 6.1,
                        "baseSeverity": "MEDIUM",
                        "confidentialityImpact": "LOW",
                        "integrityImpact": "LOW",
                        "privilegesRequired": "NONE",
                        "scope": "CHANGED",
                        "userInteraction": "REQUIRED",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N",
                        "version": "3.1"
                    },
                    "exploitabilityScore": 2.8,
                    "impactScore": 2.7
                }
            },
            "lastModifiedDate": "2022-12-16T21:48Z",
            "publishedDate": "2022-12-14T17:15Z"
        }
    }
}