{
    "GSD": {
        "alias": "CVE-2022-35948",
        "description": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround.",
        "id": "GSD-2022-35948",
        "references": [
            "https://www.suse.com/security/cve/CVE-2022-35948.html"
        ]
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "security-advisories@github.com",
                "ID": "CVE-2022-35948",
                "STATE": "PUBLIC",
                "TITLE": "CRLF Injection in Nodejs \u2018undici\u2019 via Content-Type"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "undici",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_value": "=< 5.8.0"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "nodejs"
                        }
                    ]
                }
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround."
                    }
                ]
            },
            "impact": {
                "cvss": {
                    "attackComplexity": "HIGH",
                    "attackVector": "NETWORK",
                    "availabilityImpact": "HIGH",
                    "baseScore": 7.1,
                    "baseSeverity": "HIGH",
                    "confidentialityImpact": "HIGH",
                    "integrityImpact": "LOW",
                    "privilegesRequired": "LOW",
                    "scope": "UNCHANGED",
                    "userInteraction": "NONE",
                    "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:H/I:L/A:H",
                    "version": "3.1"
                }
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')"
                            }
                        ]
                    },
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://github.com/nodejs/undici/releases/tag/v5.8.2",
                        "refsource": "MISC",
                        "url": "https://github.com/nodejs/undici/releases/tag/v5.8.2"
                    },
                    {
                        "name": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
                        "refsource": "CONFIRM",
                        "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
                    },
                    {
                        "name": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80",
                        "refsource": "MISC",
                        "url": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
                    }
                ]
            },
            "source": {
                "advisory": "GHSA-f772-66g8-q5h3",
                "discovery": "UNKNOWN"
            }
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": [
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:nodejs:undici:*:*:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "5.8.2",
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    }
                ]
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2022-35948"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "undici is an HTTP/1.1 client, written from scratch for Node.js.`=< undici@5.8.0` users are vulnerable to _CRLF Injection_ on headers when using unsanitized input as request headers, more specifically, inside the `content-type` header. Example: ``` import { request } from 'undici' const unsanitizedContentTypeInput = 'application/json\\r\\n\\r\\nGET /foo2 HTTP/1.1' await request('http://localhost:3000, { method: 'GET', headers: { 'content-type': unsanitizedContentTypeInput }, }) ``` The above snippet will perform two requests in a single `request` API call: 1) `http://localhost:3000/` 2) `http://localhost:3000/foo2` This issue was patched in Undici v5.8.1. Sanitize input when sending content-type headers using user input as a workaround."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-74"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3",
                            "refsource": "CONFIRM",
                            "tags": [
                                "Exploit",
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/nodejs/undici/security/advisories/GHSA-f772-66g8-q5h3"
                        },
                        {
                            "name": "https://github.com/nodejs/undici/releases/tag/v5.8.2",
                            "refsource": "MISC",
                            "tags": [
                                "Release Notes",
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/nodejs/undici/releases/tag/v5.8.2"
                        },
                        {
                            "name": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80",
                            "refsource": "MISC",
                            "tags": [
                                "Patch",
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/nodejs/undici/commit/66165d604fd0aee70a93ed5c44ad4cc2df395f80"
                        }
                    ]
                }
            },
            "impact": {
                "baseMetricV3": {
                    "cvssV3": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 9.8,
                        "baseSeverity": "CRITICAL",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H",
                        "version": "3.1"
                    },
                    "exploitabilityScore": 3.9,
                    "impactScore": 5.9
                }
            },
            "lastModifiedDate": "2022-08-16T16:53Z",
            "publishedDate": "2022-08-15T11:21Z"
        }
    }
}