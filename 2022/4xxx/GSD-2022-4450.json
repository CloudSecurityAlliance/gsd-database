{
    "GSD": {
        "alias": "CVE-2022-4450",
        "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
        "id": "GSD-2022-4450",
        "references": [
            "https://www.debian.org/security/2023/dsa-5343",
            "https://access.redhat.com/errata/RHSA-2023:0946",
            "https://www.suse.com/security/cve/CVE-2022-4450.html",
            "https://ubuntu.com/security/CVE-2022-4450"
        ]
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "openssl-security@openssl.org",
                "ID": "CVE-2022-4450",
                "STATE": "PUBLIC"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "OpenSSL",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_affected": "<",
                                                    "version_name": "3.0.0",
                                                    "version_value": "3.0.8"
                                                },
                                                {
                                                    "version_affected": "<",
                                                    "version_name": "1.1.1",
                                                    "version_value": "1.1.1t"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "OpenSSL"
                        }
                    ]
                }
            },
            "credits": [
                {
                    "lang": "en",
                    "value": "CarpetFuzz"
                },
                {
                    "lang": "en",
                    "value": "Dawei Wang"
                },
                {
                    "lang": "en",
                    "value": "Marc Sch\u00f6nefeld"
                },
                {
                    "lang": "en",
                    "value": "Kurt Roeckx"
                },
                {
                    "lang": "en",
                    "value": "Matt Caswell"
                }
            ],
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                    }
                ]
            },
            "generator": {
                "engine": "Vulnogram 0.1.0-dev"
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "double-free"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://www.openssl.org/news/secadv/20230207.txt",
                        "refsource": "MISC",
                        "url": "https://www.openssl.org/news/secadv/20230207.txt"
                    },
                    {
                        "name": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
                        "refsource": "MISC",
                        "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83"
                    },
                    {
                        "name": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
                        "refsource": "MISC",
                        "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b"
                    }
                ]
            },
            "source": {
                "discovery": "UNKNOWN"
            }
        },
        "gitlab.com": {
            "advisories": [
                {
                    "affected_range": ">=1.1.1 <1.1.1t||>=3.0.0 <3.0.8",
                    "affected_versions": "All versions starting from 1.1.1 before 1.1.1t, all versions starting from 3.0.0 before 3.0.8",
                    "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-415",
                        "CWE-937"
                    ],
                    "date": "2023-07-19",
                    "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue.",
                    "fixed_versions": [
                        "1.1.1t",
                        "3.0.8"
                    ],
                    "identifier": "CVE-2022-4450",
                    "identifiers": [
                        "CVE-2022-4450"
                    ],
                    "not_impacted": "All versions before 1.1.1, all versions starting from 1.1.1t before 3.0.0, all versions starting from 3.0.8",
                    "package_slug": "conan/openssl",
                    "pubdate": "2023-02-08",
                    "solution": "Upgrade to versions 1.1.1t, 3.0.8 or above.",
                    "title": "Double Free",
                    "urls": [
                        "https://nvd.nist.gov/vuln/detail/CVE-2022-4450",
                        "https://www.openssl.org/news/secadv/20230207.txt"
                    ],
                    "uuid": "1a14d3d9-b6f4-4df0-9923-1a423fb5fcc1"
                }
            ]
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": [
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:openssl:openssl:*:*:*:*:*:*:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "3.0.8",
                                "versionStartIncluding": "3.0.0",
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:openssl:openssl:*:*:*:*:*:*:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "1.1.1t",
                                "versionStartIncluding": "1.1.1",
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    },
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:stormshield:stormshield_network_security:*:*:*:*:*:*:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "4.6.3",
                                "versionStartIncluding": "4.4.0",
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:stormshield:stormshield_network_security:*:*:*:*:*:*:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "4.3.16",
                                "versionStartIncluding": "4.0.0",
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    }
                ]
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "openssl-security@openssl.org",
                    "ID": "CVE-2022-4450"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirectly by a number of other OpenSSL functions including PEM_X509_INFO_read_bio_ex() and SSL_CTX_use_serverinfo_file() which are also vulnerable. Some OpenSSL internal uses of these functions are not vulnerable because the caller does not free the header argument if PEM_read_bio_ex() returns a failure code. These locations include the PEM_read_bio_TYPE() functions as well as the decoders introduced in OpenSSL 3.0. The OpenSSL asn1parse command line application is also impacted by this issue."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-415"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://www.openssl.org/news/secadv/20230207.txt",
                            "refsource": "MISC",
                            "tags": [
                                "Vendor Advisory"
                            ],
                            "url": "https://www.openssl.org/news/secadv/20230207.txt"
                        },
                        {
                            "name": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83",
                            "refsource": "MISC",
                            "tags": [
                                "Patch",
                                "Vendor Advisory"
                            ],
                            "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=63bcf189be73a9cc1264059bed6f57974be74a83"
                        },
                        {
                            "name": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b",
                            "refsource": "MISC",
                            "tags": [
                                "Patch",
                                "Vendor Advisory"
                            ],
                            "url": "https://git.openssl.org/gitweb/?p=openssl.git;a=commitdiff;h=bbcf509bd046b34cca19c766bbddc31683d0858b"
                        }
                    ]
                }
            },
            "impact": {
                "baseMetricV3": {
                    "cvssV3": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 7.5,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                        "version": "3.1"
                    },
                    "exploitabilityScore": 3.9,
                    "impactScore": 3.6
                }
            },
            "lastModifiedDate": "2023-07-19T00:57Z",
            "publishedDate": "2023-02-08T20:15Z"
        }
    }
}