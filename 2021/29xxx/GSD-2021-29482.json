{
    "GSD": {
        "alias": "CVE-2021-29482",
        "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated.",
        "id": "GSD-2021-29482",
        "references": [
            "https://access.redhat.com/errata/RHSA-2022:0687",
            "https://access.redhat.com/errata/RHSA-2021:3016",
            "https://access.redhat.com/errata/RHSA-2021:2920",
            "https://access.redhat.com/errata/RHSA-2022:1276",
            "https://access.redhat.com/errata/RHSA-2022:2183"
        ]
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "security-advisories@github.com",
                "ID": "CVE-2021-29482",
                "STATE": "PUBLIC",
                "TITLE": "denial of service in github.com/ulikunitz/xz"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "xz",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_value": "< 0.5.8"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "ulikunitz"
                        }
                    ]
                }
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated."
                    }
                ]
            },
            "impact": {
                "cvss": {
                    "attackComplexity": "LOW",
                    "attackVector": "NETWORK",
                    "availabilityImpact": "HIGH",
                    "baseScore": 7.5,
                    "baseSeverity": "HIGH",
                    "confidentialityImpact": "NONE",
                    "integrityImpact": "NONE",
                    "privilegesRequired": "NONE",
                    "scope": "UNCHANGED",
                    "userInteraction": "NONE",
                    "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                    "version": "3.1"
                }
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "{\"CWE-835\":\"Loop with Unreachable Exit Condition ('Infinite Loop')\"}"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
                        "refsource": "CONFIRM",
                        "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"
                    },
                    {
                        "name": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
                        "refsource": "MISC",
                        "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"
                    }
                ]
            },
            "source": {
                "advisory": "GHSA-25xm-hr59-7c27",
                "discovery": "UNKNOWN"
            }
        },
        "gitlab.com": {
            "advisories": [
                {
                    "affected_range": "<v0.5.8",
                    "affected_versions": "All versions before 0.5.8",
                    "cvss_v2": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                    "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-835",
                        "CWE-937"
                    ],
                    "date": "2021-05-14",
                    "description": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function `readUvarint` used to read the xz container format may not terminate a loop provide malicous input. As a workaround, users can limit the size of the compressed file input to a reasonable size for their use case. The standard library recently had the same issue described in CVE-2020-16845.",
                    "fixed_versions": [
                        "v0.5.8"
                    ],
                    "identifier": "CVE-2021-29482",
                    "identifiers": [
                        "CVE-2021-29482",
                        "GHSA-25xm-hr59-7c27"
                    ],
                    "not_impacted": "All versions starting from 0.5.8",
                    "package_slug": "go/github.com/ulikunitz/xz",
                    "pubdate": "2021-04-28",
                    "solution": "Upgrade to version 0.5.8 or above.",
                    "title": "Loop with Unreachable Exit Condition (Infinite Loop)",
                    "urls": [
                        "https://nvd.nist.gov/vuln/detail/CVE-2021-29482"
                    ],
                    "uuid": "014cccae-5991-45c7-8071-a8134ee1b0d8",
                    "versions": [
                        {
                            "commit": {
                                "sha": "0d8180d7179935c2419fbe2c1e1b8ab41b6df4cb",
                                "tags": [
                                    "v0.5.8"
                                ],
                                "timestamp": "20200819200640"
                            },
                            "number": "v0.5.8"
                        }
                    ]
                }
            ]
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": [
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:xz_project:xz:*:*:*:*:*:go:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "0.5.8",
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    }
                ]
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2021-29482"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "xz is a compression and decompression library focusing on the xz format completely written in Go. The function readUvarint used to read the xz container format may not terminate a loop provide malicous input. The problem has been fixed in release v0.5.8. As a workaround users can limit the size of the compressed file input to a reasonable size for their use case. The standard library had recently the same issue and got the CVE-2020-16845 allocated."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-835"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27",
                            "refsource": "CONFIRM",
                            "tags": [
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/ulikunitz/xz/security/advisories/GHSA-25xm-hr59-7c27"
                        },
                        {
                            "name": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b",
                            "refsource": "MISC",
                            "tags": [
                                "Patch",
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/ulikunitz/xz/commit/69c6093c7b2397b923acf82cb378f55ab2652b9b"
                        }
                    ]
                }
            },
            "impact": {
                "baseMetricV2": {
                    "acInsufInfo": false,
                    "cvssV2": {
                        "accessComplexity": "LOW",
                        "accessVector": "NETWORK",
                        "authentication": "NONE",
                        "availabilityImpact": "PARTIAL",
                        "baseScore": 5.0,
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                        "version": "2.0"
                    },
                    "exploitabilityScore": 10.0,
                    "impactScore": 2.9,
                    "obtainAllPrivilege": false,
                    "obtainOtherPrivilege": false,
                    "obtainUserPrivilege": false,
                    "severity": "MEDIUM",
                    "userInteractionRequired": false
                },
                "baseMetricV3": {
                    "cvssV3": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 7.5,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H",
                        "version": "3.1"
                    },
                    "exploitabilityScore": 3.9,
                    "impactScore": 3.6
                }
            },
            "lastModifiedDate": "2021-05-14T19:56Z",
            "publishedDate": "2021-04-28T19:15Z"
        }
    }
}