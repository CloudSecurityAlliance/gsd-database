{
    "GSD": {
        "alias": "CVE-2020-15168",
        "description": "node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.",
        "id": "GSD-2020-15168"
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "security-advisories@github.com",
                "ID": "CVE-2020-15168",
                "STATE": "PUBLIC",
                "TITLE": "File size limit bypass in node-fetch"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "node-fetch",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_value": "<2.6.1"
                                                },
                                                {
                                                    "version_value": ">3.0.0-beta.1, <3.0.0-beta.9"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "node-fetch"
                        }
                    ]
                }
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing."
                    }
                ]
            },
            "impact": {
                "cvss": {
                    "attackComplexity": "HIGH",
                    "attackVector": "NETWORK",
                    "availabilityImpact": "LOW",
                    "baseScore": 2.6,
                    "baseSeverity": "LOW",
                    "confidentialityImpact": "NONE",
                    "integrityImpact": "NONE",
                    "privilegesRequired": "LOW",
                    "scope": "UNCHANGED",
                    "userInteraction": "REQUIRED",
                    "vectorString": "CVSS:3.1/AV:N/AC:H/PR:L/UI:R/S:U/C:N/I:N/A:L",
                    "version": "3.1"
                }
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "CWE-20: Improper Input Validation"
                            }
                        ]
                    },
                    {
                        "description": [
                            {
                                "lang": "eng",
                                "value": "CWE-770 Allocation of Resources Without Limits or Throttling"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r",
                        "refsource": "CONFIRM",
                        "url": "https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r"
                    },
                    {
                        "name": "https://www.npmjs.com/package/node-fetch",
                        "refsource": "MISC",
                        "url": "https://www.npmjs.com/package/node-fetch"
                    }
                ]
            },
            "source": {
                "advisory": "GHSA-w7rc-rwvf-8q5r",
                "discovery": "UNKNOWN"
            }
        },
        "gitlab.com": {
            "advisories": [
                {
                    "affected_range": "<2.6.1||=3.0.0",
                    "affected_versions": "All versions before 2.6.1, version 3.0.0",
                    "cvss_v2": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                    "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-770",
                        "CWE-937"
                    ],
                    "date": "2020-09-17",
                    "description": "node-fetch did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after `fetch()` has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.",
                    "fixed_versions": [
                        "2.6.1"
                    ],
                    "identifier": "CVE-2020-15168",
                    "identifiers": [
                        "CVE-2020-15168",
                        "GHSA-w7rc-rwvf-8q5r"
                    ],
                    "not_impacted": "All versions starting from 2.6.1 before 3.0.0, all versions after 3.0.0",
                    "package_slug": "npm/node-fetch",
                    "pubdate": "2020-09-10",
                    "solution": "Upgrade to version 2.6.1 or above.",
                    "title": "Allocation of Resources Without Limits or Throttling",
                    "urls": [
                        "https://nvd.nist.gov/vuln/detail/CVE-2020-15168"
                    ],
                    "uuid": "000ce9bd-fa5b-4a52-9962-64fb4290f446"
                }
            ]
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": [
                    {
                        "children": [],
                        "cpe_match": [
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:*:*:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "versionEndExcluding": "2.6.1",
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:3.0.0:beta1:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:3.0.0:beta5:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:3.0.0:beta6:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:3.0.0:beta7:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "vulnerable": true
                            },
                            {
                                "cpe23Uri": "cpe:2.3:a:node-fetch_project:node-fetch:3.0.0:beta8:*:*:*:node.js:*:*",
                                "cpe_name": [],
                                "vulnerable": true
                            }
                        ],
                        "operator": "OR"
                    }
                ]
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2020-15168"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "node-fetch before versions 2.6.1 and 3.0.0-beta.9 did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure. For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-770"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r",
                            "refsource": "CONFIRM",
                            "tags": [
                                "Third Party Advisory"
                            ],
                            "url": "https://github.com/node-fetch/node-fetch/security/advisories/GHSA-w7rc-rwvf-8q5r"
                        },
                        {
                            "name": "https://www.npmjs.com/package/node-fetch",
                            "refsource": "MISC",
                            "tags": [
                                "Product",
                                "Third Party Advisory"
                            ],
                            "url": "https://www.npmjs.com/package/node-fetch"
                        }
                    ]
                }
            },
            "impact": {
                "baseMetricV2": {
                    "acInsufInfo": false,
                    "cvssV2": {
                        "accessComplexity": "LOW",
                        "accessVector": "NETWORK",
                        "authentication": "NONE",
                        "availabilityImpact": "PARTIAL",
                        "baseScore": 5.0,
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "vectorString": "AV:N/AC:L/Au:N/C:N/I:N/A:P",
                        "version": "2.0"
                    },
                    "exploitabilityScore": 10.0,
                    "impactScore": 2.9,
                    "obtainAllPrivilege": false,
                    "obtainOtherPrivilege": false,
                    "obtainUserPrivilege": false,
                    "severity": "MEDIUM",
                    "userInteractionRequired": false
                },
                "baseMetricV3": {
                    "cvssV3": {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "LOW",
                        "baseScore": 5.3,
                        "baseSeverity": "MEDIUM",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:L",
                        "version": "3.1"
                    },
                    "exploitabilityScore": 3.9,
                    "impactScore": 1.4
                }
            },
            "lastModifiedDate": "2020-09-17T20:21Z",
            "publishedDate": "2020-09-10T19:15Z"
        }
    }
}