{
  "GSD": {
    "alias": "CVE-2020-26254",
    "description": "omniauth-apple is the OmniAuth strategy for \"Sign In with Apple\" (RubyGem omniauth-apple). In omniauth-apple before version 1.0.1 attackers can fake their email address during authentication. This vulnerability impacts applications using the omniauth-apple strategy of OmniAuth and using the info.email field of OmniAuth's Auth Hash Schema for any kind of identification. The value of this field may be set to any value of the attacker's choice including email addresses of other users. Applications not using info.email for identification but are instead using the uid field are not impacted in the same manner. Note, these applications may still be negatively affected if the value of info.email is being used for other purposes. Applications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later.",
    "id": "GSD-2020-26254"
  },
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "affected": [
        {
          "package": {
            "ecosystem": "RubyGems",
            "name": "omniauth-apple",
            "purl": "pkg:gem/omniauth-apple"
          }
        }
      ],
      "aliases": [
        "CVE-2020-26254",
        "GHSA-49r3-2549-3633"
      ],
      "details": "### Impact\n\nThis vulnerability impacts applications using the [omniauth-apple](https://github.com/nhosoya/omniauth-apple) strategy of OmniAuth and using the `info.email` field of OmniAuth's [Auth Hash Schema](https://github.com/omniauth/omniauth/wiki/Auth-Hash-Schema) for any kind of identification.  The value of this field may be set to any value of the attacker's choice including email addresses of other users.\n\nFor example, an application using omniauth-apple with the following code will be impacted:\n```ruby\ndef omniauth_callback\n    auth_hash = request.env['omniauth.auth']\n    @authenticated_user = User.find_by(email: auth_hash.info.email)\nend\n```\n\nApplications not using `info.email` for identification but are instead using the `uid` field are not impacted in the same manner.  Note, these applications may still be negatively affected if the value of `info.email` is being used for other purposes.\n\n### Patches\n\nApplications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later.\n\n### Workarounds\n\nIf unable to upgrade to a patched version, monkey patching `OmniAuth::Strategies::Apple#email` as follows is advised as a workaround:\n\n```ruby\nmodule OmniAuth\n  module Strategies\n    class Apple\n      def email\n        id_info['email']\n      end\n    end\n  end\nend\n```",
      "id": "GSD-2020-26254",
      "modified": "2020-12-08T00:00:00.000Z",
      "published": "2020-12-08T00:00:00.000Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633"
        }
      ],
      "schema_version": "1.4.0",
      "severity": [
        {
          "score": 7.7,
          "type": "CVSS_V3"
        }
      ],
      "summary": "omniauth-apple allows attacker to fake their email address during authentication"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "security-advisories@github.com",
        "ID": "CVE-2020-26254",
        "STATE": "PUBLIC",
        "TITLE": "omniauth-apple allows attacker to fake their email address during authentication"
      },
      "affects": {
        "vendor": {
          "vendor_data": [
            {
              "product": {
                "product_data": [
                  {
                    "product_name": "omniauth-apple",
                    "version": {
                      "version_data": [
                        {
                          "version_value": "< 1.0.1"
                        }
                      ]
                    }
                  }
                ]
              },
              "vendor_name": "nhosoya"
            }
          ]
        }
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "omniauth-apple is the OmniAuth strategy for \"Sign In with Apple\" (RubyGem omniauth-apple). In omniauth-apple before version 1.0.1 attackers can fake their email address during authentication. This vulnerability impacts applications using the omniauth-apple strategy of OmniAuth and using the info.email field of OmniAuth's Auth Hash Schema for any kind of identification. The value of this field may be set to any value of the attacker's choice including email addresses of other users. Applications not using info.email for identification but are instead using the uid field are not impacted in the same manner. Note, these applications may still be negatively affected if the value of info.email is being used for other purposes. Applications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later."
          }
        ]
      },
      "impact": {
        "cvss": {
          "attackComplexity": "LOW",
          "attackVector": "NETWORK",
          "availabilityImpact": "NONE",
          "baseScore": 7.7,
          "baseSeverity": "HIGH",
          "confidentialityImpact": "NONE",
          "integrityImpact": "HIGH",
          "privilegesRequired": "LOW",
          "scope": "CHANGED",
          "userInteraction": "NONE",
          "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N",
          "version": "3.1"
        }
      },
      "problemtype": {
        "problemtype_data": [
          {
            "description": [
              {
                "lang": "eng",
                "value": "CWE-290 Authentication Bypass by Spoofing"
              }
            ]
          }
        ]
      },
      "references": {
        "reference_data": [
          {
            "name": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633",
            "refsource": "CONFIRM",
            "url": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633"
          },
          {
            "name": "https://github.com/nhosoya/omniauth-apple/commit/b37d5409213adae2ca06a67fec14c8d3d07d9016",
            "refsource": "MISC",
            "url": "https://github.com/nhosoya/omniauth-apple/commit/b37d5409213adae2ca06a67fec14c8d3d07d9016"
          },
          {
            "name": "https://github.com/nhosoya/omniauth-apple/blob/master/CHANGELOG.md#101---2020-12-03",
            "refsource": "MISC",
            "url": "https://github.com/nhosoya/omniauth-apple/blob/master/CHANGELOG.md#101---2020-12-03"
          }
        ]
      },
      "source": {
        "advisory": "GHSA-49r3-2549-3633",
        "discovery": "UNKNOWN"
      }
    },
    "github.com/rubysec/ruby-advisory-db": {
      "cve": "2020-26254",
      "cvss_v3": 7.7,
      "date": "2020-12-08",
      "description": "### Impact\n\nThis vulnerability impacts applications using the [omniauth-apple](https://github.com/nhosoya/omniauth-apple) strategy of OmniAuth and using the `info.email` field of OmniAuth's [Auth Hash Schema](https://github.com/omniauth/omniauth/wiki/Auth-Hash-Schema) for any kind of identification.  The value of this field may be set to any value of the attacker's choice including email addresses of other users.\n\nFor example, an application using omniauth-apple with the following code will be impacted:\n```ruby\ndef omniauth_callback\n    auth_hash = request.env['omniauth.auth']\n    @authenticated_user = User.find_by(email: auth_hash.info.email)\nend\n```\n\nApplications not using `info.email` for identification but are instead using the `uid` field are not impacted in the same manner.  Note, these applications may still be negatively affected if the value of `info.email` is being used for other purposes.\n\n### Patches\n\nApplications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later.\n\n### Workarounds\n\nIf unable to upgrade to a patched version, monkey patching `OmniAuth::Strategies::Apple#email` as follows is advised as a workaround:\n\n```ruby\nmodule OmniAuth\n  module Strategies\n    class Apple\n      def email\n        id_info['email']\n      end\n    end\n  end\nend\n```",
      "gem": "omniauth-apple",
      "ghsa": "49r3-2549-3633",
      "patched_versions": [
        ">= 1.0.1"
      ],
      "title": "omniauth-apple allows attacker to fake their email address during authentication",
      "url": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633"
    },
    "gitlab.com": {
      "advisories": [
        {
          "affected_range": "<1.0.1",
          "affected_versions": "All versions before 1.0.1",
          "cvss_v2": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
          "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N",
          "cwe_ids": [
            "CWE-1035",
            "CWE-290",
            "CWE-937"
          ],
          "date": "2020-12-10",
          "description": "omniauth-apple is the OmniAuth strategy for \"Sign In with Apple\" (RubyGem omniauth-apple). Applications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple or later.",
          "fixed_versions": [
            "1.0.1"
          ],
          "identifier": "CVE-2020-26254",
          "identifiers": [
            "CVE-2020-26254",
            "GHSA-49r3-2549-3633"
          ],
          "not_impacted": "All versions starting from 1.0.1",
          "package_slug": "gem/omniauth-apple",
          "pubdate": "2020-12-08",
          "solution": "Upgrade to version 1.0.1 or above.",
          "title": "Authentication Bypass by Spoofing",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2020-26254"
          ],
          "uuid": "cda4be7d-0e4e-445f-a2d2-78e0d87793a6"
        }
      ]
    },
    "nvd.nist.gov": {
      "configurations": {
        "CVE_data_version": "4.0",
        "nodes": [
          {
            "children": [],
            "cpe_match": [
              {
                "cpe23Uri": "cpe:2.3:a:omniauth-apple_project:omniauth-apple:*:*:*:*:*:ruby:*:*",
                "cpe_name": [],
                "versionEndExcluding": "1.0.1",
                "vulnerable": true
              }
            ],
            "operator": "OR"
          }
        ]
      },
      "cve": {
        "CVE_data_meta": {
          "ASSIGNER": "security-advisories@github.com",
          "ID": "CVE-2020-26254"
        },
        "data_format": "MITRE",
        "data_type": "CVE",
        "data_version": "4.0",
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "omniauth-apple is the OmniAuth strategy for \"Sign In with Apple\" (RubyGem omniauth-apple). In omniauth-apple before version 1.0.1 attackers can fake their email address during authentication. This vulnerability impacts applications using the omniauth-apple strategy of OmniAuth and using the info.email field of OmniAuth's Auth Hash Schema for any kind of identification. The value of this field may be set to any value of the attacker's choice including email addresses of other users. Applications not using info.email for identification but are instead using the uid field are not impacted in the same manner. Note, these applications may still be negatively affected if the value of info.email is being used for other purposes. Applications using affected versions of omniauth-apple are advised to upgrade to omniauth-apple version 1.0.1 or later."
            }
          ]
        },
        "problemtype": {
          "problemtype_data": [
            {
              "description": [
                {
                  "lang": "en",
                  "value": "CWE-290"
                }
              ]
            }
          ]
        },
        "references": {
          "reference_data": [
            {
              "name": "https://github.com/nhosoya/omniauth-apple/commit/b37d5409213adae2ca06a67fec14c8d3d07d9016",
              "refsource": "MISC",
              "tags": [
                "Patch",
                "Third Party Advisory"
              ],
              "url": "https://github.com/nhosoya/omniauth-apple/commit/b37d5409213adae2ca06a67fec14c8d3d07d9016"
            },
            {
              "name": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633",
              "refsource": "CONFIRM",
              "tags": [
                "Exploit",
                "Mitigation",
                "Third Party Advisory"
              ],
              "url": "https://github.com/nhosoya/omniauth-apple/security/advisories/GHSA-49r3-2549-3633"
            },
            {
              "name": "https://github.com/nhosoya/omniauth-apple/blob/master/CHANGELOG.md#101---2020-12-03",
              "refsource": "MISC",
              "tags": [
                "Release Notes",
                "Third Party Advisory"
              ],
              "url": "https://github.com/nhosoya/omniauth-apple/blob/master/CHANGELOG.md#101---2020-12-03"
            }
          ]
        }
      },
      "impact": {
        "baseMetricV2": {
          "acInsufInfo": false,
          "cvssV2": {
            "accessComplexity": "LOW",
            "accessVector": "NETWORK",
            "authentication": "NONE",
            "availabilityImpact": "NONE",
            "baseScore": 5.0,
            "confidentialityImpact": "NONE",
            "integrityImpact": "PARTIAL",
            "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
            "version": "2.0"
          },
          "exploitabilityScore": 10.0,
          "impactScore": 2.9,
          "obtainAllPrivilege": false,
          "obtainOtherPrivilege": false,
          "obtainUserPrivilege": false,
          "severity": "MEDIUM",
          "userInteractionRequired": false
        },
        "baseMetricV3": {
          "cvssV3": {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 7.7,
            "baseSeverity": "HIGH",
            "confidentialityImpact": "NONE",
            "integrityImpact": "HIGH",
            "privilegesRequired": "LOW",
            "scope": "CHANGED",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N",
            "version": "3.1"
          },
          "exploitabilityScore": 3.1,
          "impactScore": 4.0
        }
      },
      "lastModifiedDate": "2020-12-10T14:46Z",
      "publishedDate": "2020-12-08T15:15Z"
    }
  }
}