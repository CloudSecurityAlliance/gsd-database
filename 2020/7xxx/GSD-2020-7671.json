{
  "GSD": {
    "alias": "CVE-2020-7671",
    "description": "goliath through 1.0.6 allows request smuggling attacks where goliath is used as a backend and a frontend proxy also being vulnerable. It is possible to conduct HTTP request smuggling attacks by sending the Content-Length header twice. Furthermore, invalid Transfer Encoding headers were found to be parsed as valid which could be leveraged for TE:CL smuggling attacks.",
    "id": "GSD-2020-7671"
  },
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "affected": [
        {
          "package": {
            "ecosystem": "RubyGems",
            "name": "goliath",
            "purl": "pkg:gem/goliath"
          }
        }
      ],
      "aliases": [
        "CVE-2020-7671",
        "GHSA-3892-2r52-p65m"
      ],
      "details": "goliath through 1.0.6 allows request smuggling attacks where goliath\nis used as a backend and a frontend proxy also being vulnerable. It is possible\nto conduct HTTP request smuggling attacks by sending the Content-Length header twice.\nFurthermore, invalid Transfer Encoding headers were found to be parsed as valid\nwhich could be leveraged for TE:CL smuggling attacks.\n",
      "id": "GSD-2020-7671",
      "modified": "2021-05-24T00:00:00.000Z",
      "published": "2021-05-24T00:00:00.000Z",
      "references": [
        {
          "type": "WEB",
          "url": "https://github.com/advisories/GHSA-3892-2r52-p65m"
        }
      ],
      "schema_version": "1.4.0",
      "severity": [
        {
          "score": 7.5,
          "type": "CVSS_V3"
        }
      ],
      "summary": "HTTP Request Smuggling in goliath"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "report@snyk.io",
        "ID": "CVE-2020-7671",
        "STATE": "PUBLIC"
      },
      "affects": {
        "vendor": {
          "vendor_data": [
            {
              "product": {
                "product_data": [
                  {
                    "product_name": "goliath",
                    "version": {
                      "version_data": [
                        {
                          "version_value": "All versions including 1.0.6"
                        }
                      ]
                    }
                  }
                ]
              },
              "vendor_name": "n/a"
            }
          ]
        }
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "goliath through 1.0.6 allows request smuggling attacks where goliath is used as a backend and a frontend proxy also being vulnerable. It is possible to conduct HTTP request smuggling attacks by sending the Content-Length header twice. Furthermore, invalid Transfer Encoding headers were found to be parsed as valid which could be leveraged for TE:CL smuggling attacks."
          }
        ]
      },
      "problemtype": {
        "problemtype_data": [
          {
            "description": [
              {
                "lang": "eng",
                "value": "HTTP Request Smuggling"
              }
            ]
          }
        ]
      },
      "references": {
        "reference_data": [
          {
            "name": "https://github.com/postrank-labs/goliath/issues/351,",
            "refsource": "MISC",
            "url": "https://github.com/postrank-labs/goliath/issues/351,"
          },
          {
            "name": "https://snyk.io/vuln/SNYK-RUBY-GOLIATH-569136",
            "refsource": "MISC",
            "url": "https://snyk.io/vuln/SNYK-RUBY-GOLIATH-569136"
          }
        ]
      }
    },
    "github.com/rubysec/ruby-advisory-db": {
      "cve": "2020-7671",
      "cvss_v3": 7.5,
      "date": "2021-05-24",
      "description": "goliath through 1.0.6 allows request smuggling attacks where goliath\nis used as a backend and a frontend proxy also being vulnerable. It is possible\nto conduct HTTP request smuggling attacks by sending the Content-Length header twice.\nFurthermore, invalid Transfer Encoding headers were found to be parsed as valid\nwhich could be leveraged for TE:CL smuggling attacks.\n",
      "gem": "goliath",
      "ghsa": "3892-2r52-p65m",
      "title": "HTTP Request Smuggling in goliath",
      "url": "https://github.com/advisories/GHSA-3892-2r52-p65m"
    },
    "gitlab.com": {
      "advisories": [
        {
          "affected_range": "<=1.0.6",
          "affected_versions": "All versions up to 1.0.6",
          "cvss_v2": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
          "cvss_v3": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
          "cwe_ids": [
            "CWE-1035",
            "CWE-444",
            "CWE-937"
          ],
          "date": "2020-06-16",
          "description": "goliath allows request smuggling attacks where goliath is used as a used as a backend with a frontend proxy that is also vulnerable. It is possible to conduct HTTP request smuggling attacks by sending the `Content-Length` header twice. Furthermore, invalid `Transfer-Encoding` headers were found to be parsed as valid which could be leveraged for TE:CL smuggling attacks.",
          "fixed_versions": [],
          "identifier": "CVE-2020-7671",
          "identifiers": [
            "CVE-2020-7671"
          ],
          "not_impacted": "",
          "package_slug": "gem/goliath",
          "pubdate": "2020-06-10",
          "solution": "Unfortunately, there is no solution available yet.",
          "title": "Inconsistent Interpretation of HTTP Requests (HTTP Request Smuggling)",
          "urls": [
            "https://nvd.nist.gov/vuln/detail/CVE-2020-7671"
          ],
          "uuid": "bdd72dac-4f20-468e-98fe-097e77c3d075"
        }
      ]
    },
    "nvd.nist.gov": {
      "configurations": {
        "CVE_data_version": "4.0",
        "nodes": [
          {
            "children": [],
            "cpe_match": [
              {
                "cpe23Uri": "cpe:2.3:a:goliath_project:goliath:*:*:*:*:*:ruby:*:*",
                "cpe_name": [],
                "versionEndIncluding": "1.0.6",
                "vulnerable": true
              }
            ],
            "operator": "OR"
          }
        ]
      },
      "cve": {
        "CVE_data_meta": {
          "ASSIGNER": "report@snyk.io",
          "ID": "CVE-2020-7671"
        },
        "data_format": "MITRE",
        "data_type": "CVE",
        "data_version": "4.0",
        "description": {
          "description_data": [
            {
              "lang": "en",
              "value": "goliath through 1.0.6 allows request smuggling attacks where goliath is used as a backend and a frontend proxy also being vulnerable. It is possible to conduct HTTP request smuggling attacks by sending the Content-Length header twice. Furthermore, invalid Transfer Encoding headers were found to be parsed as valid which could be leveraged for TE:CL smuggling attacks."
            }
          ]
        },
        "problemtype": {
          "problemtype_data": [
            {
              "description": [
                {
                  "lang": "en",
                  "value": "CWE-444"
                }
              ]
            }
          ]
        },
        "references": {
          "reference_data": [
            {
              "name": "https://github.com/postrank-labs/goliath/issues/351,",
              "refsource": "MISC",
              "tags": [
                "Third Party Advisory"
              ],
              "url": "https://github.com/postrank-labs/goliath/issues/351,"
            },
            {
              "name": "https://snyk.io/vuln/SNYK-RUBY-GOLIATH-569136",
              "refsource": "MISC",
              "tags": [
                "Third Party Advisory"
              ],
              "url": "https://snyk.io/vuln/SNYK-RUBY-GOLIATH-569136"
            }
          ]
        }
      },
      "impact": {
        "baseMetricV2": {
          "acInsufInfo": false,
          "cvssV2": {
            "accessComplexity": "LOW",
            "accessVector": "NETWORK",
            "authentication": "NONE",
            "availabilityImpact": "NONE",
            "baseScore": 5.0,
            "confidentialityImpact": "NONE",
            "integrityImpact": "PARTIAL",
            "vectorString": "AV:N/AC:L/Au:N/C:N/I:P/A:N",
            "version": "2.0"
          },
          "exploitabilityScore": 10.0,
          "impactScore": 2.9,
          "obtainAllPrivilege": false,
          "obtainOtherPrivilege": false,
          "obtainUserPrivilege": false,
          "severity": "MEDIUM",
          "userInteractionRequired": false
        },
        "baseMetricV3": {
          "cvssV3": {
            "attackComplexity": "LOW",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 7.5,
            "baseSeverity": "HIGH",
            "confidentialityImpact": "NONE",
            "integrityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "userInteraction": "NONE",
            "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N",
            "version": "3.1"
          },
          "exploitabilityScore": 3.9,
          "impactScore": 3.6
        }
      },
      "lastModifiedDate": "2020-06-16T18:46Z",
      "publishedDate": "2020-06-10T16:15Z"
    }
  }
}