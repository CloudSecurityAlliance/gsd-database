{
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "aliases": [
        "CVE-2023-52521"
      ],
      "details": "In the Linux kernel, the following vulnerability has been resolved:\n\nbpf: Annotate bpf_long_memcpy with data_race\n\nsyzbot reported a data race splat between two processes trying to\nupdate the same BPF map value via syscall on different CPUs:\n\n  BUG: KCSAN: data-race in bpf_percpu_array_update / bpf_percpu_array_update\n\n  write to 0xffffe8fffe7425d8 of 8 bytes by task 8257 on cpu 1:\n   bpf_long_memcpy include/linux/bpf.h:428 [inline]\n   bpf_obj_memcpy include/linux/bpf.h:441 [inline]\n   copy_map_value_long include/linux/bpf.h:464 [inline]\n   bpf_percpu_array_update+0x3bb/0x500 kernel/bpf/arraymap.c:380\n   bpf_map_update_value+0x190/0x370 kernel/bpf/syscall.c:175\n   generic_map_update_batch+0x3ae/0x4f0 kernel/bpf/syscall.c:1749\n   bpf_map_do_batch+0x2df/0x3d0 kernel/bpf/syscall.c:4648\n   __sys_bpf+0x28a/0x780\n   __do_sys_bpf kernel/bpf/syscall.c:5241 [inline]\n   __se_sys_bpf kernel/bpf/syscall.c:5239 [inline]\n   __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5239\n   do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n   do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\n  write to 0xffffe8fffe7425d8 of 8 bytes by task 8268 on cpu 0:\n   bpf_long_memcpy include/linux/bpf.h:428 [inline]\n   bpf_obj_memcpy include/linux/bpf.h:441 [inline]\n   copy_map_value_long include/linux/bpf.h:464 [inline]\n   bpf_percpu_array_update+0x3bb/0x500 kernel/bpf/arraymap.c:380\n   bpf_map_update_value+0x190/0x370 kernel/bpf/syscall.c:175\n   generic_map_update_batch+0x3ae/0x4f0 kernel/bpf/syscall.c:1749\n   bpf_map_do_batch+0x2df/0x3d0 kernel/bpf/syscall.c:4648\n   __sys_bpf+0x28a/0x780\n   __do_sys_bpf kernel/bpf/syscall.c:5241 [inline]\n   __se_sys_bpf kernel/bpf/syscall.c:5239 [inline]\n   __x64_sys_bpf+0x43/0x50 kernel/bpf/syscall.c:5239\n   do_syscall_x64 arch/x86/entry/common.c:50 [inline]\n   do_syscall_64+0x41/0xc0 arch/x86/entry/common.c:80\n   entry_SYSCALL_64_after_hwframe+0x63/0xcd\n\n  value changed: 0x0000000000000000 -> 0xfffffff000002788\n\nThe bpf_long_memcpy is used with 8-byte aligned pointers, power-of-8 size\nand forced to use long read/writes to try to atomically copy long counters.\nIt is best-effort only and no barriers are here since it _will_ race with\nconcurrent updates from BPF programs. The bpf_long_memcpy() is called from\nbpf(2) syscall. Marco suggested that the best way to make this known to\nKCSAN would be to use data_race() annotation.",
      "id": "GSD-2023-52521",
      "modified": "2024-02-21T06:01:53.427803Z",
      "schema_version": "1.4.0"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "cve@kernel.org",
        "ID": "CVE-2023-52521",
        "STATE": "REJECT"
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "** REJECT ** This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
          }
        ]
      }
    },
    "nvd.nist.gov": {
      "cve": {
        "descriptions": [
          {
            "lang": "en",
            "value": "Rejected reason: This CVE ID has been rejected or withdrawn by its CVE Numbering Authority."
          }
        ],
        "id": "CVE-2023-52521",
        "lastModified": "2024-03-05T23:15:07.310",
        "metrics": {},
        "published": "2024-03-02T22:15:48.127",
        "references": [],
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "vulnStatus": "Rejected"
      }
    }
  }
}