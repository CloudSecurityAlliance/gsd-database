{
    "GSD": {
        "alias": "CVE-2023-26145",
        "id": "GSD-2023-26145"
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "report@snyk.io",
                "ID": "CVE-2023-26145",
                "STATE": "PUBLIC"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "pydash",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_affected": "<",
                                                    "version_name": "0",
                                                    "version_value": "6.0.0"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "n/a"
                        }
                    ]
                }
            },
            "credits": [
                {
                    "lang": "en",
                    "value": "Calum Hutton"
                }
            ],
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "This affects versions of the package pydash before 6.0.0. A number of pydash methods such as pydash.objects.invoke() and pydash.collections.invoke_map() accept dotted paths (Deep Path Strings) to target a nested Python object, relative to the original source object. These paths can be used to target internal class attributes and dict items, to retrieve, modify or invoke nested Python objects.\r\r**Note:**\r\rThe pydash.objects.invoke() method is vulnerable to Command Injection when the following prerequisites are satisfied:\r\r1) The source object (argument 1) is not a built-in object such as list/dict (otherwise, the __init__.__globals__ path is not accessible)\r\r2) The attacker has control over argument 2 (the path string) and argument 3 (the argument to pass to the invoked method)\r\r\rThe pydash.collections.invoke_map() method is also vulnerable, but is harder to exploit as the attacker does not have direct control over the argument to be passed to the invoked function."
                    }
                ]
            },
            "impact": {
                "cvss": [
                    {
                        "attackComplexity": "HIGH",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "NONE",
                        "baseScore": 7.4,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "HIGH",
                        "integrityImpact": "HIGH",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N/E:P",
                        "version": "3.1"
                    }
                ]
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "cweId": "CWE-78",
                                "lang": "eng",
                                "value": "Command Injection"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518",
                        "refsource": "MISC",
                        "url": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518"
                    },
                    {
                        "name": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca",
                        "refsource": "MISC",
                        "url": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca"
                    },
                    {
                        "name": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021",
                        "refsource": "MISC",
                        "url": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021"
                    }
                ]
            }
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": []
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "report@snyk.io",
                    "ID": "CVE-2023-26145"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "This affects versions of the package pydash before 6.0.0. A number of pydash methods such as pydash.objects.invoke() and pydash.collections.invoke_map() accept dotted paths (Deep Path Strings) to target a nested Python object, relative to the original source object. These paths can be used to target internal class attributes and dict items, to retrieve, modify or invoke nested Python objects.\r\r**Note:**\r\rThe pydash.objects.invoke() method is vulnerable to Command Injection when the following prerequisites are satisfied:\r\r1) The source object (argument 1) is not a built-in object such as list/dict (otherwise, the __init__.__globals__ path is not accessible)\r\r2) The attacker has control over argument 2 (the path string) and argument 3 (the argument to pass to the invoked method)\r\r\rThe pydash.collections.invoke_map() method is also vulnerable, but is harder to exploit as the attacker does not have direct control over the argument to be passed to the invoked function."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": []
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/dgilland/pydash/commit/6ff0831ad285fff937cafd2a853f20cc9ae92021"
                        },
                        {
                            "name": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://gist.github.com/CalumHutton/45d33e9ea55bf4953b3b31c84703dfca"
                        },
                        {
                            "name": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://security.snyk.io/vuln/SNYK-PYTHON-PYDASH-5916518"
                        }
                    ]
                }
            },
            "impact": {},
            "lastModifiedDate": "2023-09-28T12:44Z",
            "publishedDate": "2023-09-28T05:15Z"
        }
    }
}