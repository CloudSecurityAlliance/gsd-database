{
    "GSD": {
        "alias": "CVE-2023-28426",
        "id": "GSD-2023-28426"
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "cve@mitre.org",
                "ID": "CVE-2023-28426",
                "STATE": "REJECT"
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "** REJECT ** DO NOT USE THIS CANDIDATE NUMBER. ConsultIDs: GHSA-xrqq-wqh4-5hg2. Reason: Further investigation showed that this CVE was assigned in error. Notes: See https://github.com/darylldoyle/svg-sanitizer/issues/88 for a technical discussion."
                    }
                ]
            }
        },
        "gitlab.com": {
            "advisories": [
                {
                    "affected_range": "<0.16.0",
                    "affected_versions": "All versions before 0.16.0",
                    "cwe_ids": [
                        "CWE-1035",
                        "CWE-79",
                        "CWE-79",
                        "CWE-937"
                    ],
                    "date": "2023-03-20",
                    "description": "savg-sanitizer is a PHP SVG/XML Sanitizer. A bypass has been found in versions prior to 0.16.0 that allows an attacker to upload an SVG with persistent cross-site scripting. HTML elements within CDATA needed to be sanitized correctly, as we were converting them to a textnode and therefore, the library wasn't seeing them as DOM elements. This issue is fixed in version 0.16.0. Any data within a CDATA node will now be sanitised using HTMLPurifier. The maintainers have also removed many of the HTML and MathML elements from the allowed element list, as without ForiegnObject, they're not legal within the SVG context. There are no known workarounds.",
                    "fixed_versions": [
                        "0.16.0"
                    ],
                    "identifier": "CVE-2023-28426",
                    "identifiers": [
                        "GHSA-xrqq-wqh4-5hg2",
                        "CVE-2023-28426"
                    ],
                    "not_impacted": "All versions starting from 0.16.0",
                    "package_slug": "packagist/enshrined/svg-sanitize",
                    "pubdate": "2023-03-20",
                    "solution": "Upgrade to version 0.16.0 or above.",
                    "title": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
                    "urls": [
                        "https://github.com/darylldoyle/svg-sanitizer/security/advisories/GHSA-xrqq-wqh4-5hg2",
                        "https://nvd.nist.gov/vuln/detail/CVE-2023-28426",
                        "https://github.com/darylldoyle/svg-sanitizer/commit/cce18bc237c05c6e093e9672db7926788da9b322",
                        "https://github.com/advisories/GHSA-xrqq-wqh4-5hg2"
                    ],
                    "uuid": "b84168b5-cce1-489a-85d5-3909a734bb4d"
                }
            ]
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": []
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2023-28426"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "savg-sanitizer is a PHP SVG/XML Sanitizer. A bypass has been found in versions prior to 0.16.0 that allows an attacker to upload an SVG with persistent cross-site scripting. HTML elements within CDATA needed to be sanitized correctly, as we were converting them to a textnode and therefore, the library wasn't seeing them as DOM elements. This issue is fixed in version 0.16.0. Any data within a CDATA node will now be sanitised using HTMLPurifier. The maintainers have also removed many of the HTML and MathML elements from the allowed element list, as without ForiegnObject, they're not legal within the SVG context. There are no known workarounds."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-79"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/darylldoyle/svg-sanitizer/commit/cce18bc237c05c6e093e9672db7926788da9b322",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/darylldoyle/svg-sanitizer/commit/cce18bc237c05c6e093e9672db7926788da9b322"
                        },
                        {
                            "name": "https://github.com/darylldoyle/svg-sanitizer/security/advisories/GHSA-xrqq-wqh4-5hg2",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/darylldoyle/svg-sanitizer/security/advisories/GHSA-xrqq-wqh4-5hg2"
                        }
                    ]
                }
            },
            "impact": {},
            "lastModifiedDate": "2023-03-21T11:51Z",
            "publishedDate": "2023-03-20T14:15Z"
        }
    }
}