{
    "GSD": {
        "alias": "CVE-2023-34451",
        "id": "GSD-2023-34451"
    },
    "namespaces": {
        "cve.org": {
            "CVE_data_meta": {
                "ASSIGNER": "security-advisories@github.com",
                "ID": "CVE-2023-34451",
                "STATE": "PUBLIC"
            },
            "affects": {
                "vendor": {
                    "vendor_data": [
                        {
                            "product": {
                                "product_data": [
                                    {
                                        "product_name": "cometbft",
                                        "version": {
                                            "version_data": [
                                                {
                                                    "version_affected": "=",
                                                    "version_value": "< 0.34.29"
                                                },
                                                {
                                                    "version_affected": "=",
                                                    "version_value": ">= 0.37.0, < 0.37.2"
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "vendor_name": "cometbft"
                        }
                    ]
                }
            },
            "data_format": "MITRE",
            "data_type": "CVE",
            "data_version": "4.0",
            "description": {
                "description_data": [
                    {
                        "lang": "eng",
                        "value": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. In `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo2, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node. The problem is fixed in releases `v0.34.29` and `v0.37.2`. Some workarounds are available. Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node. Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p."
                    }
                ]
            },
            "impact": {
                "cvss": [
                    {
                        "attackComplexity": "LOW",
                        "attackVector": "NETWORK",
                        "availabilityImpact": "HIGH",
                        "baseScore": 8.2,
                        "baseSeverity": "HIGH",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "LOW",
                        "privilegesRequired": "NONE",
                        "scope": "UNCHANGED",
                        "userInteraction": "NONE",
                        "vectorString": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:H",
                        "version": "3.1"
                    }
                ]
            },
            "problemtype": {
                "problemtype_data": [
                    {
                        "description": [
                            {
                                "cweId": "CWE-401",
                                "lang": "eng",
                                "value": "CWE-401: Missing Release of Memory after Effective Lifetime"
                            }
                        ]
                    }
                ]
            },
            "references": {
                "reference_data": [
                    {
                        "name": "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm",
                        "refsource": "MISC",
                        "url": "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm"
                    },
                    {
                        "name": "https://github.com/cometbft/cometbft/pull/890",
                        "refsource": "MISC",
                        "url": "https://github.com/cometbft/cometbft/pull/890"
                    },
                    {
                        "name": "https://github.com/tendermint/tendermint/pull/2778",
                        "refsource": "MISC",
                        "url": "https://github.com/tendermint/tendermint/pull/2778"
                    }
                ]
            },
            "source": {
                "advisory": "GHSA-w24w-wp77-qffm",
                "discovery": "UNKNOWN"
            }
        },
        "nvd.nist.gov": {
            "configurations": {
                "CVE_data_version": "4.0",
                "nodes": []
            },
            "cve": {
                "CVE_data_meta": {
                    "ASSIGNER": "security-advisories@github.com",
                    "ID": "CVE-2023-34451"
                },
                "data_format": "MITRE",
                "data_type": "CVE",
                "data_version": "4.0",
                "description": {
                    "description_data": [
                        {
                            "lang": "en",
                            "value": "CometBFT is a Byzantine Fault Tolerant (BFT) middleware that takes a state transition machine and replicates it on many machines. The mempool maintains two data structures to keep track of outstanding transactions: a list and a map.\nThese two data structures are supposed to be in sync all the time in the sense that the map tracks the index (if any) of the transaction in the list. In `v0.37.0`, and `v0.37.1`, as well as in `v0.34.28`, and all previous releases of the CometBFT repo2, it is possible to have them out of sync. When this happens, the list may contain several copies of the same transaction. Because the map tracks a single index, it is then no longer possible to remove all the copies of the transaction from the list. This happens even if the duplicated transaction is later committed in a block. The only way to remove the transaction is by restarting the node.\n\nThe above problem can be repeated on and on until a sizable number of transactions are stuck in the mempool, in order to try to bring down the target node. The problem is fixed in releases `v0.34.29` and `v0.37.2`. Some workarounds are available. Increasing the value of `cache_size` in `config.toml` makes it very difficult to effectively attack a full node. Not exposing the transaction submission RPC's would mitigate the probability of a successful attack, as the attacker would then have to create a modified (byzantine) full node to be able to perform the attack via p2p."
                        }
                    ]
                },
                "problemtype": {
                    "problemtype_data": [
                        {
                            "description": [
                                {
                                    "lang": "en",
                                    "value": "CWE-401"
                                }
                            ]
                        }
                    ]
                },
                "references": {
                    "reference_data": [
                        {
                            "name": "https://github.com/cometbft/cometbft/pull/890",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/cometbft/cometbft/pull/890"
                        },
                        {
                            "name": "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/cometbft/cometbft/security/advisories/GHSA-w24w-wp77-qffm"
                        },
                        {
                            "name": "https://github.com/tendermint/tendermint/pull/2778",
                            "refsource": "MISC",
                            "tags": [],
                            "url": "https://github.com/tendermint/tendermint/pull/2778"
                        }
                    ]
                }
            },
            "impact": {},
            "lastModifiedDate": "2023-07-03T18:33Z",
            "publishedDate": "2023-07-03T17:15Z"
        }
    }
}