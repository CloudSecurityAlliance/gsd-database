{
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "aliases": [
        "CVE-2024-21491"
      ],
      "details": "Versions of the package svix before 1.17.0 are vulnerable to Authentication Bypass due to an issue in the verify function where signatures of different lengths are incorrectly compared. An attacker can bypass signature verification by providing a shorter signature that matches the beginning of the actual signature.\r\r**Note:**\r\rThe attacker would need to know a victim uses the Rust library for verification,no easy way to automatically check that; and uses webhooks by a service that uses Svix, and then figure out a way to craft a malicious payload that will actually include all of the correct identifiers needed to trick the receivers to cause actual issues.",
      "id": "GSD-2024-21491",
      "modified": "2023-12-23T06:02:09.388697Z",
      "schema_version": "1.4.0"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "report@snyk.io",
        "ID": "CVE-2024-21491",
        "STATE": "PUBLIC"
      },
      "affects": {
        "vendor": {
          "vendor_data": [
            {
              "product": {
                "product_data": [
                  {
                    "product_name": "svix",
                    "version": {
                      "version_data": [
                        {
                          "version_affected": "<",
                          "version_name": "0",
                          "version_value": "1.17.0"
                        }
                      ]
                    }
                  }
                ]
              },
              "vendor_name": "n/a"
            }
          ]
        }
      },
      "credits": [
        {
          "lang": "en",
          "value": "Fredrik Meringdal"
        }
      ],
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "Versions of the package svix before 1.17.0 are vulnerable to Authentication Bypass due to an issue in the verify function where signatures of different lengths are incorrectly compared. An attacker can bypass signature verification by providing a shorter signature that matches the beginning of the actual signature.\r\r**Note:**\r\rThe attacker would need to know a victim uses the Rust library for verification,no easy way to automatically check that; and uses webhooks by a service that uses Svix, and then figure out a way to craft a malicious payload that will actually include all of the correct identifiers needed to trick the receivers to cause actual issues."
          }
        ]
      },
      "impact": {
        "cvss": [
          {
            "attackComplexity": "HIGH",
            "attackVector": "NETWORK",
            "availabilityImpact": "NONE",
            "baseScore": 5.9,
            "baseSeverity": "MEDIUM",
            "confidentialityImpact": "LOW",
            "integrityImpact": "HIGH",
            "privilegesRequired": "NONE",
            "scope": "UNCHANGED",
            "userInteraction": "REQUIRED",
            "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:H/A:N",
            "version": "3.1"
          }
        ]
      },
      "problemtype": {
        "problemtype_data": [
          {
            "description": [
              {
                "cweId": "CWE-288",
                "lang": "eng",
                "value": "Authentication Bypass"
              }
            ]
          }
        ]
      },
      "references": {
        "reference_data": [
          {
            "name": "https://security.snyk.io/vuln/SNYK-RUST-SVIX-6230729",
            "refsource": "MISC",
            "url": "https://security.snyk.io/vuln/SNYK-RUST-SVIX-6230729"
          },
          {
            "name": "https://github.com/svix/svix-webhooks/pull/1190",
            "refsource": "MISC",
            "url": "https://github.com/svix/svix-webhooks/pull/1190"
          },
          {
            "name": "https://github.com/svix/svix-webhooks/commit/958821bd3b956d1436af65f70a0964d4ffb7daf6",
            "refsource": "MISC",
            "url": "https://github.com/svix/svix-webhooks/commit/958821bd3b956d1436af65f70a0964d4ffb7daf6"
          },
          {
            "name": "https://rustsec.org/advisories/RUSTSEC-2024-0010.html",
            "refsource": "MISC",
            "url": "https://rustsec.org/advisories/RUSTSEC-2024-0010.html"
          }
        ]
      }
    },
    "nvd.nist.gov": {
      "cve": {
        "descriptions": [
          {
            "lang": "en",
            "value": "Versions of the package svix before 1.17.0 are vulnerable to Authentication Bypass due to an issue in the verify function where signatures of different lengths are incorrectly compared. An attacker can bypass signature verification by providing a shorter signature that matches the beginning of the actual signature.\r\r**Note:**\r\rThe attacker would need to know a victim uses the Rust library for verification,no easy way to automatically check that; and uses webhooks by a service that uses Svix, and then figure out a way to craft a malicious payload that will actually include all of the correct identifiers needed to trick the receivers to cause actual issues."
          },
          {
            "lang": "es",
            "value": "Las versiones del paquete svix anteriores a la 1.17.0 son vulnerables a la omisi\u00f3n de autenticaci\u00f3n debido a un problema en la funci\u00f3n de verificaci\u00f3n donde las firmas de diferentes longitudes se comparan incorrectamente. Un atacante puede eludir la verificaci\u00f3n de firma proporcionando una firma m\u00e1s corta que coincida con el comienzo de la firma real. **Nota:** El atacante necesitar\u00eda saber que la v\u00edctima usa la librer\u00eda Rust para la verificaci\u00f3n, no hay una manera f\u00e1cil de verificarlo autom\u00e1ticamente; y utiliza webhooks de un servicio que utiliza Svix, y luego encuentra una manera de crear una carga \u00fatil maliciosa que en realidad incluir\u00e1 todos los identificadores correctos necesarios para enga\u00f1ar a los receptores y causar problemas reales."
          }
        ],
        "id": "CVE-2024-21491",
        "lastModified": "2024-03-06T14:15:48.020",
        "metrics": {
          "cvssMetricV31": [
            {
              "cvssData": {
                "attackComplexity": "HIGH",
                "attackVector": "NETWORK",
                "availabilityImpact": "NONE",
                "baseScore": 5.9,
                "baseSeverity": "MEDIUM",
                "confidentialityImpact": "LOW",
                "integrityImpact": "HIGH",
                "privilegesRequired": "NONE",
                "scope": "UNCHANGED",
                "userInteraction": "REQUIRED",
                "vectorString": "CVSS:3.1/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:H/A:N",
                "version": "3.1"
              },
              "exploitabilityScore": 1.6,
              "impactScore": 4.2,
              "source": "report@snyk.io",
              "type": "Secondary"
            }
          ]
        },
        "published": "2024-02-13T05:15:08.873",
        "references": [
          {
            "source": "report@snyk.io",
            "url": "https://github.com/svix/svix-webhooks/commit/958821bd3b956d1436af65f70a0964d4ffb7daf6"
          },
          {
            "source": "report@snyk.io",
            "url": "https://github.com/svix/svix-webhooks/pull/1190"
          },
          {
            "source": "report@snyk.io",
            "url": "https://rustsec.org/advisories/RUSTSEC-2024-0010.html"
          },
          {
            "source": "report@snyk.io",
            "url": "https://security.snyk.io/vuln/SNYK-RUST-SVIX-6230729"
          }
        ],
        "sourceIdentifier": "report@snyk.io",
        "vulnStatus": "Awaiting Analysis",
        "weaknesses": [
          {
            "description": [
              {
                "lang": "en",
                "value": "CWE-288"
              }
            ],
            "source": "report@snyk.io",
            "type": "Secondary"
          }
        ]
      }
    }
  }
}