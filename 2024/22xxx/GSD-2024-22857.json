{
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "aliases": [
        "CVE-2024-22857"
      ],
      "details": "zlog 1.2.16 has a heap-based buffer overflow in struct zlog_rule_s while creating a new rule that is already defined in the provided configuration file. A regular user can achieve arbitrary code execution.",
      "id": "GSD-2024-22857",
      "modified": "2024-01-12T06:02:17.933696Z",
      "schema_version": "1.4.0"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "cve@mitre.org",
        "ID": "CVE-2024-22857",
        "STATE": "PUBLIC"
      },
      "affects": {
        "vendor": {
          "vendor_data": [
            {
              "product": {
                "product_data": [
                  {
                    "product_name": "n/a",
                    "version": {
                      "version_data": [
                        {
                          "version_value": "n/a"
                        }
                      ]
                    }
                  }
                ]
              },
              "vendor_name": "n/a"
            }
          ]
        }
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "Heap based buffer flow in zlog v1.1.0 to v1.2.17 in zlog_rule_new().The size of record_name is MAXLEN_PATH(1024) + 1 but file_path may have data upto MAXLEN_CFG_LINE(MAXLEN_PATH*4) + 1. So a check was missing in zlog_rule_new() while copying the record_name from file_path + 1 which caused the buffer overflow. An attacker can exploit this vulnerability to overwrite the zlog_record_fn record_func function pointer to get arbitrary code execution or potentially cause remote code execution (RCE)."
          }
        ]
      },
      "problemtype": {
        "problemtype_data": [
          {
            "description": [
              {
                "lang": "eng",
                "value": "n/a"
              }
            ]
          }
        ]
      },
      "references": {
        "reference_data": [
          {
            "name": "https://github.com/HardySimpson/zlog/",
            "refsource": "MISC",
            "url": "https://github.com/HardySimpson/zlog/"
          },
          {
            "name": "https://github.com/HardySimpson/zlog/blob/1a7b1a6fb956b92a4079ccc91f30da21f34ca063/src/rule.h#L30",
            "refsource": "MISC",
            "url": "https://github.com/HardySimpson/zlog/blob/1a7b1a6fb956b92a4079ccc91f30da21f34ca063/src/rule.h#L30"
          },
          {
            "name": "https://www.cybersecurity-help.cz/vdb/SB2024022842",
            "refsource": "MISC",
            "url": "https://www.cybersecurity-help.cz/vdb/SB2024022842"
          },
          {
            "name": "https://github.com/HardySimpson/zlog/pull/251",
            "refsource": "MISC",
            "url": "https://github.com/HardySimpson/zlog/pull/251"
          }
        ]
      }
    },
    "nvd.nist.gov": {
      "cve": {
        "descriptions": [
          {
            "lang": "en",
            "value": "Heap based buffer flow in zlog v1.1.0 to v1.2.17 in zlog_rule_new().The size of record_name is MAXLEN_PATH(1024) + 1 but file_path may have data upto MAXLEN_CFG_LINE(MAXLEN_PATH*4) + 1. So a check was missing in zlog_rule_new() while copying the record_name from file_path + 1 which caused the buffer overflow. An attacker can exploit this vulnerability to overwrite the zlog_record_fn record_func function pointer to get arbitrary code execution or potentially cause remote code execution (RCE)."
          },
          {
            "lang": "es",
            "value": "zlog 1.2.16 tiene un desbordamiento de b\u00fafer de almacenamiento din\u00e1mico en la estructura zlog_rule_s mientras crea una nueva regla que ya est\u00e1 definida en el archivo de configuraci\u00f3n proporcionado. Un usuario normal puede lograr la ejecuci\u00f3n de c\u00f3digo arbitrario."
          }
        ],
        "id": "CVE-2024-22857",
        "lastModified": "2024-04-09T21:15:15.970",
        "metrics": {},
        "published": "2024-03-07T01:15:52.640",
        "references": [
          {
            "source": "cve@mitre.org",
            "url": "https://github.com/HardySimpson/zlog/"
          },
          {
            "source": "cve@mitre.org",
            "url": "https://github.com/HardySimpson/zlog/blob/1a7b1a6fb956b92a4079ccc91f30da21f34ca063/src/rule.h#L30"
          },
          {
            "source": "cve@mitre.org",
            "url": "https://github.com/HardySimpson/zlog/pull/251"
          },
          {
            "source": "cve@mitre.org",
            "url": "https://www.cybersecurity-help.cz/vdb/SB2024022842"
          }
        ],
        "sourceIdentifier": "cve@mitre.org",
        "vulnStatus": "Awaiting Analysis"
      }
    }
  }
}