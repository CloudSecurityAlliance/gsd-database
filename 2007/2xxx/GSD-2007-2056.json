{
  "GSD": {
    "alias": "CVE-2007-2056",
    "description": "** REJECT **  The getlock function in aimage/aimage.cpp in AFFLIB 2.2.8 and earlier allows local users to overwrite arbitrary files via a symlink attack on temporary lock files (aka \"time-of-check-time-of-use file race\"). NOTE: the researcher has retracted the original advisory, stating that \"the portion of vulnerable code is not called in any current version of AFFLIB and is therefore not exploitable.\"",
    "id": "GSD-2007-2056"
  },
  "gsd": {
    "metadata": {
      "exploitCode": "unknown",
      "remediation": "unknown",
      "reportConfidence": "confirmed",
      "type": "vulnerability"
    },
    "osvSchema": {
      "aliases": [
        "CVE-2007-2056"
      ],
      "details": "** REJECT **  The getlock function in aimage/aimage.cpp in AFFLIB 2.2.8 and earlier allows local users to overwrite arbitrary files via a symlink attack on temporary lock files (aka \"time-of-check-time-of-use file race\"). NOTE: the researcher has retracted the original advisory, stating that \"the portion of vulnerable code is not called in any current version of AFFLIB and is therefore not exploitable.\"",
      "id": "GSD-2007-2056",
      "modified": "2023-12-13T01:21:37.605805Z",
      "schema_version": "1.4.0"
    }
  },
  "namespaces": {
    "cve.org": {
      "CVE_data_meta": {
        "ASSIGNER": "cve@mitre.org",
        "ID": "CVE-2007-2056",
        "STATE": "REJECT"
      },
      "data_format": "MITRE",
      "data_type": "CVE",
      "data_version": "4.0",
      "description": {
        "description_data": [
          {
            "lang": "eng",
            "value": "** REJECT **  The getlock function in aimage/aimage.cpp in AFFLIB 2.2.8 and earlier allows local users to overwrite arbitrary files via a symlink attack on temporary lock files (aka \"time-of-check-time-of-use file race\"). NOTE: the researcher has retracted the original advisory, stating that \"the portion of vulnerable code is not called in any current version of AFFLIB and is therefore not exploitable.\""
          }
        ]
      }
    }
  }
}